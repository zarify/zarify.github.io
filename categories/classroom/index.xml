<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Classroom on Headtilt</title>
    <link>/categories/classroom/</link>
    <description>Recent content in Classroom on Headtilt</description>
    <generator>Hugo -- 0.138.0</generator>
    <language>en</language>
    <copyright>Rob Poulter</copyright>
    <lastBuildDate>Wed, 30 Dec 2020 11:12:17 +0000</lastBuildDate>
    <atom:link href="/categories/classroom/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Robotics: Inchworms with Motivation</title>
      <link>/robotics-inchworms-with-motivation/</link>
      <pubDate>Wed, 30 Dec 2020 11:12:17 +0000</pubDate>
      <guid>/robotics-inchworms-with-motivation/</guid>
      <description>&lt;img alt=&#34;Inchworm robot&#34; class=&#34;floatright&#34; loading=&#34;lazy&#34; src=&#34;/images/inchworm/splash.png&#34;&gt;&lt;p&gt;As a teacher of relatively hands-on subjects, I regularly get roped into running sessions with groups of Year 6 students coming in for Orientation Days. Since getting my first batch of Micro:bits I have been running short sessions with physical computing since it&amp;rsquo;s short and accessible, and the kids can achieve something concrete by the end of a 45 minute session.&lt;/p&gt;
&lt;p&gt;The last couple of years I have been running sessions using laser cut Inchworm robots, where students hook up a servo, battery, and infrared sensor (to demonstrate external sensing but also to remove the need to fiddle with buttons on moving objects) to the Micro:bit, and then write some basic code investigating ideal angles of movement for the servo, delay time in between moves, and utilising loops.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code Introspection in Minecraft and Python</title>
      <link>/code-introspection-in-minecraft-and-python/</link>
      <pubDate>Tue, 17 Nov 2020 05:58:26 +0000</pubDate>
      <guid>/code-introspection-in-minecraft-and-python/</guid>
      <description>&lt;img loading=&#34;lazy&#34; src=&#34;/images/minecraft_python/intro.png&#34;&gt;&lt;p&gt;I recently got around to trying out the new-ish Python mode for coding within Minecraft: Education Edition, and whilst it is refreshing to be able to &lt;strong&gt;write&lt;/strong&gt; code, the lack of a code library to be able to refer to made learning the Minecraft-specific commands somewhat difficult.&lt;/p&gt;
&lt;p&gt;Enter code introspection, which is the ability to look inside classes and methods from within Python to list them and see what is available, or to show their docstring and discover their arguments.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Year 7-8 Networking Concepts Mk 2</title>
      <link>/year-7-8-networking-concepts-mk-2/</link>
      <pubDate>Sat, 27 Jun 2020 13:11:24 +0000</pubDate>
      <guid>/year-7-8-networking-concepts-mk-2/</guid>
      <description>&lt;img loading=&#34;lazy&#34; src=&#34;/images/pairing/pair_microbit.png&#34;&gt;&lt;p&gt;&lt;a href=&#34;/year-7-8-wireless-network-concepts-with-microbits/&#34;&gt;Back in 2017&lt;/a&gt; when I was first thinking about how I could use physical computing like Micro:bits in my classroom, I wrote some quick and nasty programs to demonstrate networking concepts like attenuation and latency in wireless connections as well as adapting some ideas from the &lt;a href=&#34;https://microbit.nominetresearch.uk/networking-book-online-python/&#34;&gt;Networking With the micro:bit book&lt;/a&gt;, and &lt;a href=&#34;https://learnlearn.uk/microbit/topics/networking-two-microbits/&#34;&gt;using basic wired networks for Morse Code&lt;/a&gt; (the linked site is not the original project I used the idea from, but there are only so many permutations).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Micro:bit Epidemic</title>
      <link>/robotics-showcase-epidemic/</link>
      <pubDate>Mon, 25 May 2020 05:51:05 +0000</pubDate>
      <guid>/robotics-showcase-epidemic/</guid>
      <description>&lt;p&gt;Last year when looking at wireless concepts with my Year 8 Digital Technologies students, I wrote a program for wireless beacons and laser cut a &lt;a href=&#34;/dowsing-for-radio/&#34;&gt;Ghostbusters style PKE Meter&lt;/a&gt; with some servos and a RGB LED for students to go on a hunt in our library. It was a good opportunity to look at things like the range of wireless signals, interference due to obstruction of different materials, and noisy broadcast channels. The students quite enjoyed it and it was a nice excuse to get out of the classroom.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Year 10s: Sentiment Analysis</title>
      <link>/year-10s-sentiment-analysis/</link>
      <pubDate>Sun, 29 Dec 2019 15:46:19 +0000</pubDate>
      <guid>/year-10s-sentiment-analysis/</guid>
      <description>&lt;p&gt;In 2019 I started up a programming-oriented Data Science class with my Year 10s. I ran two classes during the year, each spanning a semester. My aim for the course was to introduce students to different ways of storing, retrieving, and working with data, as well as give some coverage over different types of data and some operations that you can perform with it (e.g. numeric, text, spatial).&lt;/p&gt;
&lt;p&gt;I ran a different main project with each class: during the first semester I looked at analysing data from the &lt;a href=&#34;https://www.aph.gov.au/Parliamentary_Business/Hansard&#34;&gt;Australian Federal Government Hansard&lt;/a&gt;. Unfortunately, the students in the group weren&amp;rsquo;t very interested in it, and (like many of my first time projects) the scope turned out to be overly broad, meaning students had trouble figuring out what they &lt;em&gt;would&lt;/em&gt; do from all the alternatives of what they &lt;em&gt;could&lt;/em&gt; do. Tangentially, working with the XML from the Hansard is a great (or terrible, depending on your perspective) activity in data cleaning - they&amp;rsquo;ve made some&amp;hellip; interesting decisions about how to format their data inside the XML structure.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Micro:bit Robotics Review 2019</title>
      <link>/microbit-robotics-review-2019/</link>
      <pubDate>Mon, 23 Dec 2019 16:07:13 +0000</pubDate>
      <guid>/microbit-robotics-review-2019/</guid>
      <description>&lt;img loading=&#34;lazy&#34; src=&#34;/images/pong_early.png&#34;&gt;&lt;img alt=&#34;Cowterpillar robot&#34; loading=&#34;lazy&#34; src=&#34;/images/cowterpillar_snap.png&#34;&gt;&lt;p&gt;This is a bit of a retrospective of teaching Robotics as a subject to Year 8 students this year. A bit of a theme for my newish subjects tends to be a reduction in expectations as I filter out what I would have liked to have worked into what actually worked and variations on a theme.&lt;/p&gt;
&lt;p&gt;The three themes I&amp;rsquo;ve really thought about since I started teaching this subject are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dowsing for Radio</title>
      <link>/dowsing-for-radio/</link>
      <pubDate>Fri, 19 Apr 2019 14:02:52 +0000</pubDate>
      <guid>/dowsing-for-radio/</guid>
      <description>&lt;img loading=&#34;lazy&#34; src=&#34;/images/pke/IMG_2246.jpg&#34;&gt;&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;This term I&amp;rsquo;ve been working through Data Representation and some Networks concepts with my Year 8 students. I used Micro:bits extensively for both aspects of this for the hands-on approach and ready access to simple networking code. To finish off the term, after looking at things like network latency, I thought it&amp;rsquo;d be fun to do an activity built around attenuation of wireless signals.&lt;/p&gt;
&lt;p&gt;Previously I&amp;rsquo;ve had students group up in pairs and have the Micro:bits send an image back and forth pixel by pixel. This allows for students to see when messages have not arrived as they will have missing pixels from their displays.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Designing a Micro:bit Robot</title>
      <link>/designing-a-microbit-robot/</link>
      <pubDate>Thu, 11 Apr 2019 06:17:18 +0000</pubDate>
      <guid>/designing-a-microbit-robot/</guid>
      <description>&lt;img loading=&#34;lazy&#34; src=&#34;/images/knuckle/front_view.jpg&#34;&gt;&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;
&lt;p&gt;Ever since I bought some of &lt;a href=&#34;https://www.kitronik.co.uk/5624-move-mini-buggy-kit-excl-microbit.html&#34;&gt;Kitronik&amp;rsquo;s :move buggies&lt;/a&gt; I&amp;rsquo;ve been interested in making robots with the Micro:bit. They&amp;rsquo;re simple to program, have a decent set of features, and the kids enjoy using them. However they&amp;rsquo;re also a royal pain to assemble due to fiddly screw locations, quite expensive for what they are (we pay around $60AUD for what amounts to about $15-20AUD in components), and difficult to add on to due to cutting you off from all the additional pins the Micro:bit has to offer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Micro:bit robotics</title>
      <link>/year-8-microbit-robotics/</link>
      <pubDate>Sat, 06 Apr 2019 08:01:00 +0000</pubDate>
      <guid>/year-8-microbit-robotics/</guid>
      <description>&lt;img class=&#34;floatright&#34; loading=&#34;lazy&#34; src=&#34;/images/top_view.jpg&#34;&gt;&lt;p&gt;This post is intended to be a bit of a primer for teachers interested in getting into more varied use of the BBC Micro:bit beyond the inbuilt basics. My intention is to put together two posts: this one on the hardware and the ecosystem, and another on approaches in the classroom (which will mostly be a list of mistakes I&amp;rsquo;ve made and thoughts on doing things beter).&lt;/p&gt;
&lt;p&gt;This is by no means an exhaustive list of things you can do or components available. I&amp;rsquo;ve generally experimented with cheap and cheerful parts that I can source myself for a few dollars to see if it&amp;rsquo;s worth implementing in the classroom. I still have a long list of things I want to try! The components listed here I&amp;rsquo;ve generally had good success with.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Micro:bit Haunted House</title>
      <link>/microbit-haunted-house/</link>
      <pubDate>Mon, 05 Nov 2018 20:56:46 +0000</pubDate>
      <guid>/microbit-haunted-house/</guid>
      <description>&lt;img alt=&#34;Haunted House internals&#34; loading=&#34;lazy&#34; src=&#34;/images/File-5-11-18-8-05-24-pm.jpeg&#34;&gt;&lt;p&gt;Testing out LDR sensors&lt;/p&gt;
&lt;p&gt;This year I have been teaching robotics to Year 8s for the first time. I&amp;rsquo;ve mainly been using BBC Micro:bits, since they are quite affordable, robust, are easy to hook up to a range of widely available components, and are easy to program in a few different environments (MicroPython being my weapon of choice).&lt;/p&gt;
&lt;p&gt;To keep myself entertained, and to provide my students with a sample project (although more complex code-wise than they&amp;rsquo;re likely to accomplish) I decided to make something myself this term while my class worked on their own group projects (theirs are themed after the UN Global Goals). I had ideas for either building a carousel or a light gun game, and settled on the latter so I didn&amp;rsquo;t have to &lt;em&gt;also&lt;/em&gt; tackle 3D printing out cams and gears and the like.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Year 7: Minecraft: EE and Programming</title>
      <link>/year-7-minecraft-ee-and-programming/</link>
      <pubDate>Mon, 24 Sep 2018 14:13:43 +0000</pubDate>
      <guid>/year-7-minecraft-ee-and-programming/</guid>
      <description>&lt;img alt=&#34;Chess Landscape&#34; loading=&#34;lazy&#34; src=&#34;/images/chess_landscape.png&#34;&gt;&lt;p&gt;This is the first year that Digital Technologies has been a mandatory part of the Australian curriculum through to Year 8. Whilst the subject area contains a &lt;a href=&#34;https://k10outline.scsa.wa.edu.au/home/teaching/curriculum-browser/technologies/digital-technologies2#year-7-syllabus&#34;&gt;number of different topics&lt;/a&gt;, the one that generally comes to mind (helped in no small part by our politicians and media 🙄 banging on about &amp;lsquo;coding&amp;rsquo; this, and &amp;lsquo;coding&amp;rsquo; that) is programming and algorithmic thinking.&lt;/p&gt;
&lt;p&gt;Since our education sector has a fairly comprehensive set of licenses to all things Microsoft, we have Minecraft: Education Edition licenses for all of our students and staff. While I am not that big of a fan of Minecraft&amp;rsquo;s system of switches and redstone wiring (I prefer my programming higher level and less clunky), I do quite like plugging in external programming through Code Connection, as I&amp;rsquo;ve written about before in toying with &lt;a href=&#34;https://headtilt.me/minecraft-edu-edition-geological-surveys/&#34; title=&#34;Minecraft Edu Edition: Geological Surveys&#34;&gt;core sampling&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Minecraft Edu Edition: Geological Surveys</title>
      <link>/minecraft-edu-edition-geological-surveys/</link>
      <pubDate>Thu, 23 Aug 2018 20:14:34 +0000</pubDate>
      <guid>/minecraft-edu-edition-geological-surveys/</guid>
      <description>&lt;img alt=&#34;Minecraft Geological Survey&#34; loading=&#34;lazy&#34; src=&#34;/images/geology/geology_cover.PNG&#34;&gt;&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been using &lt;a href=&#34;https://education.minecraft.net/&#34;&gt;Minecraft Education Edition with Code Connection&lt;/a&gt; in my Year 7 classes this term to teach programming principles, which has been a blast* (i.e. I spend a lot of time trying to encourage students to write programs rather than run around building stuff themselves).&lt;/p&gt;
&lt;img loading=&#34;lazy&#34; src=&#34;/images/geology/agent.PNG&#34;&gt;&lt;p&gt;The Agent&lt;/p&gt;
&lt;p&gt;Code Connection comes with a &lt;a href=&#34;https://minecraft.makecode.com/courses/csintro&#34;&gt;ton of interesting tutorials&lt;/a&gt; to get started with, but I&amp;rsquo;ve been writing a few things for myself to try out different features, two of which are the Agent and the Builder. The Agent is a code-controlled character that can build from its inventory, attack and destroy surrounding blocks, and do basic sensing of its environment. The builder is an invisible constructor which is used for raising structures fairly quickly; it doesn&amp;rsquo;t have an inventory and can&amp;rsquo;t interact with its environment beyond placing blocks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Year 7-8: Bad Crypto with Microbits</title>
      <link>/year-7-8-bad-crypto-with-microbits/</link>
      <pubDate>Sun, 14 May 2017 11:45:21 +0000</pubDate>
      <guid>/year-7-8-bad-crypto-with-microbits/</guid>
      <description>&lt;h1 id=&#34;security-of-wireless-networks&#34;&gt;Security of Wireless Networks&lt;/h1&gt;
&lt;p&gt;My &lt;a href=&#34;/year-7-8-wireless-network-concepts-with-microbits/&#34;&gt;previous lesson&lt;/a&gt; looking at wireless networks used Microbits and their Bluetooth networking to illustrate some of the problems with local wireless networks (as opposed to general internet connectivity, which we mostly did by doing speed tests and complaining about the school&amp;rsquo;s net connection :).&lt;/p&gt;
&lt;p&gt;At the end I wrote a bit about what I wanted to do with the next lesson, which was look at some basic crypto to handle the eavesdropping problem we had when someone else listened to the same channel we were communicating on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Year 7-8: Wireless Network Concepts with Microbits</title>
      <link>/year-7-8-wireless-network-concepts-with-microbits/</link>
      <pubDate>Sat, 13 May 2017 06:16:26 +0000</pubDate>
      <guid>/year-7-8-wireless-network-concepts-with-microbits/</guid>
      <description>&lt;h1 id=&#34;overview&#34;&gt;Overview&lt;/h1&gt;
&lt;p&gt;Part of the new Digital Technologies curriculum for year 7 and 8 involves students learning about wired and wireless networks, and methods of data transmission and security. There are activities from the Digital Technologies Learning Hub that deal with &lt;a href=&#34;https://www.digitaltechnologieshub.edu.au/teachers/lesson-ideas/computer-chatter-1&#34;&gt;routing&lt;/a&gt; and &lt;a href=&#34;https://www.digitaltechnologieshub.edu.au/teachers/lesson-ideas/computer-chatter-2&#34;&gt;issues with performance&lt;/a&gt; (that are pretty good unplugged activities). I use these or variations on these when I teach those concepts, but I wanted to put together something that actually involved technology in the classroom, and dealt with ideas a bit lower down the network stack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Year 7: Data Representation &amp; Algorithms</title>
      <link>/year-7-data-representation-and-algorithms/</link>
      <pubDate>Mon, 06 Mar 2017 12:45:59 +0000</pubDate>
      <guid>/year-7-data-representation-and-algorithms/</guid>
      <description>&lt;p&gt;A couple of weeks back I saw a link on Twitter to a &lt;a href=&#34;http://www.laurabain.com.au/blog/data-transmission-using-the-collaboration-space-in-onenote-class-notebook-to-teach-children-about-how-computers-transmit-data-to-peripherals&#34;&gt;post on Laura Bain&amp;rsquo;s blog&lt;/a&gt; about data transmission with year 4 and 5s. Go read the post, since it&amp;rsquo;s nice and short, but it&amp;rsquo;s basically kids sending binary data representing black or white pixels to each other using a OneNote Class Notebook. I was starting some of my students off on an activity that used a similar idea to (try to :) teach my kids about image data, and look at why algorithms are important while I was at it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Typefaces, Fonts, Licensing</title>
      <link>/typefaces-fonts-licensing/</link>
      <pubDate>Tue, 04 Oct 2016 08:58:48 +0000</pubDate>
      <guid>/typefaces-fonts-licensing/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Preface:&lt;/strong&gt; &lt;em&gt;Since there&amp;rsquo;s so much seemingly conflicting information out there, I&amp;rsquo;ve quite possibly gotten it wrong. If so, please let me know so I can correct this!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;End Use License Agreements are confusing. Most people don&amp;rsquo;t read them, even when they occasionally &lt;a href=&#34;http://arstechnica.com/gaming/2016/02/yes-you-can-rely-on-amazons-new-game-engine-during-the-zombie-apocalypse/&#34;&gt;embed easter eggs&lt;/a&gt;, (&lt;a href=&#34;http://www.howdesign.com/design-career/on-the-job/top-5-ways-designers-get-trouble-fonts/&#34;&gt;according to this site&lt;/a&gt;, most &lt;em&gt;designers&lt;/em&gt; don&amp;rsquo;t regularly read them when it comes to the typefaces they use), and when they do probably don&amp;rsquo;t understand them (or else why would sites like &lt;a href=&#34;https://tosdr.org&#34;&gt;ToS;DR&lt;/a&gt; exist?).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Teaching Digital Technologies</title>
      <link>/teaching-digital-technologies/</link>
      <pubDate>Sun, 10 Jul 2016 10:31:08 +0000</pubDate>
      <guid>/teaching-digital-technologies/</guid>
      <description>&lt;p&gt;The Australian Curriculum has been going through the &amp;ldquo;everything is changing&amp;rdquo; part of the ten-yearly cycle recently. As a teacher of technologies[1] it&amp;rsquo;s been both exciting (and gut-wrenching) to see how the draft curriculum has evolved to the point where it is required for implementation in 2018.&lt;/p&gt;
&lt;p&gt;I won&amp;rsquo;t go into the design of the digital technologies curriculum itself (you can &lt;a href=&#34;http://www.australiancurriculum.edu.au/technologies/digital-technologies/curriculum/f-10?layout=1&#34;&gt;see the details at the ACARA site&lt;/a&gt;) but did want to look at some of the ways people have been talking about implementing the mandatory section (up to and including year 8).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Institutional blocking as a service</title>
      <link>/institutional-blocking-as-a-service/</link>
      <pubDate>Sat, 09 Jul 2016 07:52:03 +0000</pubDate>
      <guid>/institutional-blocking-as-a-service/</guid>
      <description>&lt;p&gt;I teach a lot of different students this year - the entire year 9 cohort, most of the year 7s and 8s (spread over the year), and a few classes of year 10s. Seeing all of them regularly gives me a pretty good look at how they use technology (with the exception of mobile since, like many schools, students are prohibited from using their phones during the day), which makes for some interesting conversations.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Join the Conversation</title>
      <link>/join-the-conversation/</link>
      <pubDate>Fri, 22 Jan 2016 05:42:39 +0000</pubDate>
      <guid>/join-the-conversation/</guid>
      <description>&lt;p&gt;I started writing the draft for this post back in December after attending a conference called Switching Tracks, which seemed to focus a lot on gamification and flipped learning approaches to education. As is usual at conferences these days part of the keynote introduction was what Twitter hashtag to use for the back channel conversation.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not sure what this sort of conversation is like at other events, since I mostly attend education-themed stuff, but it usually runs something like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Time</title>
      <link>/time/</link>
      <pubDate>Tue, 29 Sep 2015 01:55:06 +0000</pubDate>
      <guid>/time/</guid>
      <description>&lt;p&gt;&lt;em&gt;&amp;ldquo;This thing all things devours:&lt;br&gt;
Birds, beasts, trees, flowers;&lt;br&gt;
Gnaws iron, bites steel;&lt;br&gt;
Grinds hard stones to meal;&lt;br&gt;
Slays king, ruins town,&lt;br&gt;
And beats high mountain down.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;&lt;strong&gt;The Hobbit&lt;/strong&gt;&amp;rdquo;, J. R. R. Tolkien&lt;/p&gt;
&lt;p&gt;This is going to be one of the rare times I write about education, but also technology. As a teacher, it can be quite difficult to get out of the rut of doing the same old thing. Pressures from trying to cover everything in the curriculum, making lessons accessible to a variety of types of learners, looking for new ideas from behind a bunch of marking, the need to keep parity with other classes so that assessments are relatively manageable to organize and consistent; basically planning for new things can be a struggle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Computing as a Subject</title>
      <link>/computing-as-a-subject/</link>
      <pubDate>Sun, 31 May 2015 11:37:11 +0000</pubDate>
      <guid>/computing-as-a-subject/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been thinking a bit lately about the identity of Computing as a subject. This has been brought on by a few factors, some recent, like a professional development day held by the local vocational training provider (South West Institute of Technology) where a local business council member looked at results of a survey of small business and the skills that they were after from young people coming from education and training. Of course I mostly paid attention to the technology skills, which were the same old song we&amp;rsquo;ve heard since I started teaching a decade ago: the Office suite, and not much else.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
