<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Headtilt</title>
    <link href="https://headtilt.me/feed.xml" rel="self" />
    <link href="https://headtilt.me" />
    <updated>2019-04-06T08:07:01+08:00</updated>
    <author>
        <name>Rob</name>
    </author>
    <id>https://headtilt.me</id>

    <entry>
        <title>Micro:bit Haunted House</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/microbit-haunted-house/"/>
        <id>https://headtilt.me/microbit-haunted-house/</id>

        <updated>2019-01-10T16:27:43+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://headtilt.me/media/posts/74/File-5-11-18-8-05-24-pm.jpeg" alt="Haunted House internals" />
                    This year I have been teaching robotics to Year 8s for the&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://headtilt.me/media/posts/74/File-5-11-18-8-05-24-pm.jpeg" alt="Haunted House internals" />
                <p>This year I have been teaching robotics to Year 8s for the first time. I've mainly been using BBC Micro:bits, since they are quite affordable, robust, are easy to hook up to a range of widely available components, and are easy to program in a few different environments (MicroPython being my weapon of choice).</p>
<p>To keep myself entertained, and to provide my students with a sample project (although more complex code-wise than they're likely to accomplish) I decided to make something myself this term while my class worked on their own group projects (theirs are themed after the UN Global Goals). I had ideas for either building a carousel or a light gun game, and settled on the latter so I didn't have to¬†<em>also</em> tackle 3D printing out cams and gears and the like.</p>
<p><iframe width="640" height="360" src="https://player.vimeo.com/video/298976485" frameborder="0" webkitallowfullscreen="webkitallowfullscreen" mozallowfullscreen="mozallowfullscreen" allowfullscreen="allowfullscreen"></iframe></p>
<p><iframe width="640" height="360" src="https://player.vimeo.com/video/298976806" frameborder="0" webkitallowfullscreen="webkitallowfullscreen" mozallowfullscreen="mozallowfullscreen" allowfullscreen="allowfullscreen"></iframe></p>
<p>I have designs and code in a <a href="https://github.com/zarify/microbit/tree/master/Haunted%20House" target="_blank" rel="noopener noreferrer">GitHub repo</a> if anyone wants to have a look or use any of my ideas - there is also a list of components I used. The laser cutter designs are a bit of a mixed bag of formats at time of posting, but I'll endeavour to standardise them to SVG or something more portable later. Be aware that the Kitronik servo code used in the servo controller is MIT licensed - I have links to original repositories in the repo readme.</p>
<p>Below is a series of in-progress photos of the build.</p>
<div class="gallery"   >
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-00-25-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-00-25-pm-thumbnail.jpeg" alt="Laser cutouts of the spooks" width="240" height="240"></a>
<figcaption class="gallery-description">Ghost prototype (top) and final designs</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-01-53-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-01-53-pm-thumbnail.jpeg" alt="Laser engraving" width="240" height="240"></a>
<figcaption class="gallery-description">Testing out low power cutting for engraving</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-02-24-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-02-24-pm-thumbnail.jpeg" alt="Spooks all cut out" width="240" height="240"></a>
<figcaption class="gallery-description">My spooky lineup</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-02-49-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-02-49-pm-thumbnail.jpeg" alt="Cutouts laid out for assembly" width="240" height="240"></a>
<figcaption class="gallery-description">Early assembly of all the pieces</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-03-13-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-03-13-pm-thumbnail.jpeg" alt="Early assembly of servos" width="240" height="240"></a>
<figcaption class="gallery-description">Attaching servos and spooks</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-03-45-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-03-45-pm-thumbnail.jpeg" alt="First lot of wiring a spook" width="240" height="240"></a>
<figcaption class="gallery-description">Wiring up the LEDs and LDR</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-04-08-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-04-08-pm-thumbnail.jpeg" alt="Front of spook post wiring" width="240" height="240"></a>
<figcaption class="gallery-description">All wired up and ready to go</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-04-59-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-04-59-pm-thumbnail.jpeg" alt="Cabling internals of house" width="240" height="240"></a>
<figcaption class="gallery-description">Things get messy</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-05-24-pm.jpeg" ><img src="https://headtilt.me/media/posts/74/gallery/File-5-11-18-8-05-24-pm-thumbnail.jpeg" alt="Testing LED and LDR components" width="240" height="240"></a>
<figcaption class="gallery-description">Running test code to ensure LDRs are working as expected</figcaption>
</figure>
</div>
<figure class="post__image undefined" ><img src="https://headtilt.me/media/posts/74/IMG_1459.JPG" alt="Assembled and tested" width="4032" height="3024">
<figcaption >Haunted House assembled and tested</figcaption>
</figure>
<h2 id="mcetoc_1d0rduh350">Design and Creation</h2>
<p>¬†There were three distinct phases for this project:</p>
<ul>
<li>Physical design (concept, vector design, laser cut and assembly)</li>
<li>Circuit design</li>
<li>Code</li>
</ul>
<p>The circuits were conceptually pretty simple: LEDs turn on and off, as well as detect and take action based off amount of light received from a photoresistor (LDR). Since the LEDs drew more power than was available from the Micro:bit itself (particularly since it also had to supply power to the LDRs) I decided to use transistors to switch power from an external battery pack to the LEDs. Since the servos were plugged into a dedicated servo controller board, they too were very straightforward.</p>
<p>I've been getting more interested in laser cutting recently, and so the physical design was really enjoyable. I mocked up my designs by hand before drawing the pieces up in Affinity Designer (not really the right tool for the job, but it works). I had used <a href="http://www.makercase.com/" target="_blank" rel="noopener noreferrer">MakerCase </a>with my students before to design simple boxes with cutouts, so I had some idea of how to design finger joints for some structure, and the main challenge was making the design big enough to house the components and allow a decent level of detail in the extras like the dead tree and the spooks inside. Apart from a couple of stuff-ups where my mental model didn't translate to the real world that well resulting in re-cuts, this went pretty smoothly, although it took about a week, mostly due to only being able to cut at work (and when I wasn't teaching üòÖ).</p>
<p>I was expecting the code to be the easiest part of the whole exercise, since that is what I'm most familiar with. The basic idea for the two¬†Micro:bits took a couple of hours to hash out in my head and roughly debug without having access to the boards. The wrinkle came when I actually loaded the code - or rather when I tried to.</p>
<p>Initially, my relatively simple model of a two-class program with a basic event loop was rejected as being too big to parse! I trimmed it down a bit (goodbye docstrings!) and tried again, only to encounter a memory error. Occasionally, the Micro:bit was even nice enough to tell me a number after the memory error, which I ended up guessing referred to how much of my code it failed to load, since it went down as I trimmed out functions, shortened strings, shifted dictionaries to lists, collapsed multiple objects to a singleton, and so on. The joys of programming on microcontrollers in interpreted languages!</p>
<p>Eventually I ended up with some plain old runtime errors, and I don't think I've ever been so happy to see one, since it meant at least my code was running on the board. Coding was still the least time-consuming part of the process, but ended up being a surprisingly challenging exercise.</p>
<h2 id="mcetoc_1d0rduh351">Reflection</h2>
<p>The whole process was really enjoyable - it ended up looking great, and works just as I envisioned it (although I didn't imagine the noisy servos in my head üòê). I haven't gotten around to building the light gun yet, since I'm having a lot of trouble figuring out how to get a nice tight beam from an LED without expensive optics or shifting to a laser, but for now a torch is sufficient.</p>
<p>I'm planning on adding a score board using a third Micro:bit sitting on the top of the structure (maybe when I design and cut out a tiled roof), and since I already have all the radio messages from the other two boards, I shouldn't need to add very much code to the others. This is a good thing, since I was getting to the point where adding in debugging messages to the servo board was pushing me over the memory limit!</p>
<p>I learned a fair bit about mixing different power levels in circuits along the way which I'll be able to use in my teaching, and I'll certainly have a few gotchas to look out for if any of my students start putting together complex programs.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Year 7: Minecraft: EE and Programming</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/year-7-minecraft-ee-and-programming/"/>
        <id>https://headtilt.me/year-7-minecraft-ee-and-programming/</id>

        <updated>2018-09-24T14:13:43+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://headtilt.me/media/posts/71/chess_landscape.png" alt="Chess Landscape" />
                    This is the first year that Digital Technologies has been a mandatory&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://headtilt.me/media/posts/71/chess_landscape.png" alt="Chess Landscape" />
                <p>This is the first year that Digital Technologies has been a mandatory part of the Australian curriculum through to Year 8. Whilst the subject area contains a <a href="https://k10outline.scsa.wa.edu.au/home/teaching/curriculum-browser/technologies/digital-technologies2#year-7-syllabus" target="_blank" rel="noopener noreferrer">number of different topics</a>, the one that generally comes to mind (helped in no small part by our politicians and media üôÑ banging on about 'coding' this, and 'coding' that) is programming and algorithmic thinking.</p>
<p>Since our education sector has a fairly comprehensive set of licenses to all things Microsoft, we have Minecraft: Education Edition licenses for all of our students and staff. While I am not that big of a fan of Minecraft's system of switches and redstone wiring (I prefer my programming higher level and less clunky), I do quite like plugging in external programming through Code Connection, as I've written about before in toying with <a href="#INTERNAL_LINK#/post/70" title="Minecraft Edu Edition: Geological Surveys">core sampling</a>.</p>
<p>With my Year 7s I thought I'd try out covering the programming component with <a href="https://education.minecraft.net/" target="_blank" rel="noopener noreferrer">Minecraft: EE</a> and <a href="https://education.minecraft.net/trainings/code-builder-for-minecraft-education-edition" target="_blank" rel="noopener noreferrer">Code Connection</a>. It gives students some nice ways to visualise problems they need to solve, as they can build/prototype a solution and then design a program which creates that solution for them.</p>
<h2>Aim</h2>
<p>I've been kicking around this idea since attending a workshop on Minecraft: EE with <a href="https://twitter.com/kieranbailey" target="_blank" rel="noopener noreferrer">Kieran Bailey</a> at the <a href="https://ecawa.wa.edu.au/conferences/2018-state-conference/" target="_blank" rel="noopener noreferrer">ECAWA State Conference</a>¬†earlier this year. Initially I was thinking about pursuing a series of lessons looking at automated agriculture (and probably will revisit that later on), but ended up with some more disjointed ideas building off Code Connection tutorials (so that students had somewhere to start in a self-paced fashion, and more importantly someone else had written the material!) and examining programming fundamentals like looping, conditionals, and variables.</p>
<p>At the end of the series of lessons, I got students to build a few programs for me. There was some mixed success, and I'll discuss the successes and failures a bit further down.</p>
<p><img class="post__image--right" src="https://headtilt.me/media/posts/71/my_head_final.PNG" alt="Heads" width="880" height="621">When designing the tasks, I had a few aims in mind:</p>
<ul>
<li>Get students to create something engaging where they wanted to solve the problem for themselves, not because it was an assessment.</li>
<li>Have a range of different ways of solving the problems.</li>
<li>Involve physical prototypes so that students could build the solution themselves to help them visualise the outcome and assist with programming in 3D space.</li>
<li>Make it difficult or impossible to share answers, whilst still allowing students to learn techniques off each other.</li>
</ul>
<p><img class="post__image--right" src="https://headtilt.me/media/posts/71/signatures.png" alt="Lava Signatures" width="964" height="303">My tasks were to create programs that:</p>
<ul>
<li>Build a blocky version of the student's own head.</li>
<li>Sign their initials in lava in a trench in the ground.</li>
<li>Build chess boards of a specified size.</li>
</ul>
<p>The first two tasks I'm fairly happy with, but the last one, although I like the problem in itself as there are multiple ways to solve it, obviously doesn't satisfy my last aim.</p>
<h2>Failures</h2>
<p>The first group through a new course is always the hardest, as it's difficult to pitch assessments at the right level to challenge but still include all students. My expectations were definitely too high with this set of tasks, and will need adjustments to both how I teach the content and in the difficulty of the assessment next year.</p>
<p><img class="post__image--right" src="https://headtilt.me/media/posts/71/tutorial_snipped.PNG" alt="OneNote tutorial snippet" width="573" height="433">One of the failures of Minecraft: EE is that since everything is kept in local storage for each student, and the process of switching programs is quite cumbersome (involving a lot of external resource loading, despite programs and Minecraft server being on the local machine), it can be quite tough to ensure students are on track rather than merrily running about doing their own thing. My lesson format for this topic is typically a step by step tutorial (with explanations and screenshots) in OneNote for students to follow, along with 2-3 extension activities at the end which use the concept in a different setting. In future I'll get students to add their own screenshots to a table at the end showing their code and results from the extension activities in order to keep them a bit more accountable.</p>
<p>As the subject is mandatory now rather than an elective, there are many¬†different literacy (and numeracy - particularly involving 3D space) levels who need to be catered for. Although I try to differentiate instruction in a number of ways (demo and explain verbally, self-paced written and graphical tutorials, teach by the side), it is always surprising who struggles with some concepts or learning methods. Whilst it is incredibly time consuming, next time around I'll add some video tutorials to the mix as well as some smaller explainers and demos to cover some more bases.</p>
<p>¬†</p>
<h2>Successes</h2>
<p>In 2018, Minecraft is an ancient beast, but I've been impressed at the coverage of students who, whilst initially complaining about it, have gotten right into the platform and a lot of the coding problems. Minecraft: EE has been a win on the engagement front.</p>
<p>Although it's by far the hardest of the three problems I gave students (and stupidly, I put it first in the task list) the "build your own head" problem has proven to be a win for getting students to really think about the task in a number of different ways. With some tweaking and more targeted introductory lessons, I think this has a lot of potential for future assessment.</p>
<p>Minecraft: EE and Code Connection has a range of really nice tutorials to build from, which provides a nice gentle introduction for both students and teachers, and they are general enough that I have been able to introduce several different concepts using them as a base.</p>
<p>Using a Minecraft world as a prototyping playground is often hilarious. There have been a number of nightmare hellscapes of half-formed heads that my students have created while debugging their programs.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Micro:bit robotics</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/year-8-microbit-robotics/"/>
        <id>https://headtilt.me/year-8-microbit-robotics/</id>

        <updated>2019-04-06T08:06:46+08:00</updated>
            <summary>
                <![CDATA[
                    <p>This post is intended to be a bit of a primer for teachers interested in getting into more varied use of the BBC Micro:bit beyond the inbuilt basics. My intention is to put together two posts: this one on the hardware and the ecosystem, and another on approaches in the classroom (which will mostly be a list of mistakes I've made and thoughts on doing things beter).</p>
<p>This is by no means an exhaustive list of things you can do or components available. I've generally experimented with cheap and cheerful parts that I can source myself for a few dollars to see if it's worth implementing in the classroom. I still have a long list of things I want to try! The components listed here I've generally had good success with.</p>
<p>Lastly, I don't have a background in electronics, so apologies for anything I've gotten wrong! If you have Feelings about any errors and want to let me know, ping me at rob at this domain and I'll fix things up.</p>

                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>This post is intended to be a bit of a primer for teachers interested in getting into more varied use of the BBC Micro:bit beyond the inbuilt basics. My intention is to put together two posts: this one on the hardware and the ecosystem, and another on approaches in the classroom (which will mostly be a list of mistakes I've made and thoughts on doing things beter).</p>
<p>This is by no means an exhaustive list of things you can do or components available. I've generally experimented with cheap and cheerful parts that I can source myself for a few dollars to see if it's worth implementing in the classroom. I still have a long list of things I want to try! The components listed here I've generally had good success with.</p>
<p>Lastly, I don't have a background in electronics, so apologies for anything I've gotten wrong! If you have Feelings about any errors and want to let me know, ping me at rob at this domain and I'll fix things up.</p>

<div class="post__toc">
<h3>Table of Contents</h3>
<ul>
<li><a href="#mcetoc_1d0qkd7ao6">Digital vs Analog</a></li>
<li><a href="#mcetoc_1d0r6hfsud">¬†Components</a>
<ul>
<li><a href="#mcetoc_1d0qkaptu1">Light Dependent Resistors (LDR)</a></li>
<li><a href="#mcetoc_1d0qkata92">Light Emitting Diodes (LED)</a></li>
<li><a href="#mcetoc_1d0qkb1ui3">Servos</a></li>
<li><a href="#mcetoc_1d0qkc2i94">Potentiometer</a></li>
<li><a href="#mcetoc_1d0qkcnbp5">Speakers/Headphones</a></li>
<li><a href="#mcetoc_1d0ql0c0n9">Mini InfraRed Sensors (Mini PIR - AS312/AM312)</a></li>
<li><a href="#mcetoc_1d0rd8d51f">Line Follower IR Sensors (TCRT5000 based)</a></li>
<li><a href="#mcetoc_1d0ql73egb">Temperature Sensors</a></li>
</ul>
</li>
<li><a href="#mcetoc_1d0ql7vcdc">Custom Addons</a></li>
<li><a href="#mcetoc_1d0qkdm3c8">Issues</a></li>
<li><a href="#mcetoc_1d0ql64jba">Yet to dig into</a></li>
</ul>
</div>
<p id="mcetoc_1d0r6jvo4e" class="msg msg--info">Unless otherwise noted, images are sourced from Pixabay and used in accordance with <a href="https://pixabay.com/en/service/license/">their license</a>.</p>
<h2 id="mcetoc_1d0qkd7ao6">Digital vs Analog</h2>
<p>One of the things that pleasantly surprised me about figuring out basic sensors and outputs is the difference between digital and analog signals.¬†Once you understand the difference between the two, the Micro:bit makes both types quite pleasant to work with (with the caveat of knowing what devices are 3.3V).</p>
<p>Both Digital and Analog signals simply refer to the voltage being input or output on a pin.</p>
<p>Digital devices are either on or off, so voltage is either low or high, which is mapped to either being a 0 or 1 when reported to whatever programming environment you are using (such as MakeCode or MicroPython).¬†Devices such as infra-red motion sensors are general integrated circuits which generate a digital signal, as when they detect motion they set the voltage being deliverd to the data pin to full, and after a pre-set time the voltage sent to the pin will be set to off.</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/72/dog-1310545_1280.jpg" alt="Binary signals are either on or off" width="872" height="872">
<figcaption >Pupper only cares if the water is on or not.</figcaption>
</figure>
<p>Analog devices output or input a range between 0 and full voltage. Rather than dealing with real voltages, this is mapped to a range of integers. For the Micro:bit this is from 0-1023 (a 10 bit binary number) although you can customise this width for other platforms (such as the ESP32). Examples of analog input devices are light dependent resistors.</p>
<p class="msg msg--info msg--success">One of the ah-ha moments I had was realising that these numbers being received from analog sensors didn't have any special meaning, and there was some analsys required to relate the amounts being reported to some real world information.</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/72/water-815475_1280.jpg" alt="Water partially being restricted" width="788" height="788">
<figcaption >An analog signal can be part of the whole potential signal.</figcaption>
</figure>
<p>¬†Analog output with Micro:bits is done via Pulse Width Modulation (PWM) rather than by changing the voltage directly. What this means is that the Micro:bit splits its output into small slices of time, and turns the pin to high voltage for¬†enough of each slice to average out the power to the desired amount¬†(called a duty cycle). This works fine with some components, but not others which expect continuous power.</p>
<p class="msg msg--highlight ">The <a href="https://microbit-micropython.readthedocs.io/en/latest/pin.html#pulse-width-modulation">MicroPython documentation on PWM</a> has some good information and diagrams.</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/72/sprinkler-1209900_1280.jpg" alt="This sprinkler puts out some water in bursts." width="687" height="687">
<figcaption >This sprinkler puts out bursts of water as it cycles.</figcaption>
</figure>
<h2 id="mcetoc_1d0r6hfsud">¬†Components</h2>
<p>All of these components can be sourced cheaply from China; I tend to buy most of my gear through AliExpress. You can buy the same things (often attached to fancier addon boards) from the hobby/education sites, but usually at a very significant markup, which is not really workable when I often want to build custom projects that are heavy on the hot glue and solder.</p>
<p>Most of these are pretty simple, but a few like the infrared sensors aren't just the basic sensor.</p>
<p class="msg msg--highlight "><strong>Common Ground</strong><br><br>One of the things that took me a while to figure out (because in general I have been figuring things out as I go) is when using different power sources for higher power components such as the LED strips and servos, the ground pins of the Micro:bit and the extra power source need to be connected.</p>
<h3 id="mcetoc_1d0qkaptu1">Light Dependent Resistors (LDR)</h3>
<p><img class="post__image--right" src="https://headtilt.me/media/posts/72/ldr-resistor-40611_1280.png" alt="Light Dependent Resistor" width="174" height="300">LDRs are brilliant simple little sensors. You pass power through them, and they change the their resistance depending on how much light is being shone on them. When reading analog data from the LDR, the intensity maps to the number recorded. Although they're pretty consistent, I've had some LDRs from the same batch report slightly different numbers, so it's worthwhile doing some calibration before use.</p>
<p>Wiring is pretty straightforward:</p>
<ul>
<li>One leg is connected to voltage</li>
<li>The other leg is connected to both a resistor (10kOhm) going to ground, and to a data pin on the Micro:bit.</li>
</ul>
<p>Some uses:</p>
<ul>
<li>Detect whether a door has been opened.</li>
<li>Turn on/off lights based on ambient light level (digital behaviour) or change light brightness or colour (analog behaviour).</li>
<li>Sensors for 'light guns' (see my <a href="#INTERNAL_LINK#/post/74">haunted house project</a>).</li>
<li>Particlulate¬†sensor for liquids (shine a known intensity light through sample, detect amount that gets through).</li>
</ul>
<p class="msg msg--success">I've been meaning to have a go at building a sun tracker using a series of LDRs set into the rim of a disk mounted on a servo, potentially for adjusting a solar panel to follow the sun.</p>
<h3 id="mcetoc_1d0qkata92"><img class="post__image--right" src="https://headtilt.me/media/posts/72/led-1715226_1280.png" alt="Light Emitting Diodes" width="141" height="300">Light Emitting Diodes (LED)</h3>
<p>LEDs come in a few different flavours. Typically the vanilla LEDs will come in several different colours (while, blue, yellow, orange, red and green) and a couple of different sizes (5mm and 3mm diameter). They work well in both a digital (on/off) and analog (brightness, using PWM) context. Although there are slight differences in power requirements, using 100 Ohm resistors for all of them keeps things simple and works fine.</p>
<figure class="post__image post__image--right" ><img src="https://headtilt.me/media/posts/72/Screen-Shot-2019-01-10-at-1.35.59-pm.png" alt="RGB LED" width="285" height="300">
<figcaption >Source: Flickr - Original author <a href="https://www.flickr.com/people/33504192@N00">Oomlout</a>¬†CC-BY-SA</figcaption>
</figure>
<p>On the fancier side of things are RGB LEDs, which can be set to any colour by mixing red, green and blue amounts.¬† This comes with some extra overhead in terms of pins (which could still be used either as analog or digital, although more usefully as analog to control the intensity of each colour channel). I generally find these a bit too fiddly and prefer to have pins free to use for other purposes.</p>
<p><img class="post__image--right" src="https://headtilt.me/media/posts/72/digital-led-strip-lights-2103020_1280.jpg" alt="RGB LED strip" width="124" height="300">Where LEDs get a bit more interesting are the collections bound up with individually controllers, so that each LED in a strip (or panel) can be individually addressed. There are a couple of common controllers that seem to be equivalent (and from what I've read, sometimes when you order one you get the other): WS2812 and SK6812. These often come under Adafruit's branding of Neopixel, but this is what they are under the hood, and they work the same way.</p>
<p>The beauty of these LED controllers is that you can chain them together and change their colour individually (as well as turning them on or off) with only one data pin and a power supply. The down side is that they are not rated for 3.3V and so you need to mix in an external power supply (I usually use 3xAA batteries for most of my projects that need more juice). You can buy these individually or in strips, but can always separate the strips in shorter ones and use them separately.</p>
<p class="msg msg--success">I came across<a href="https://hackaday.com/2017/01/20/cheating-at-5v-ws2812-control-to-use-a-3-3v-data-line/">¬†this hack</a>¬†for running these lights off 3.3V¬†and¬†will have to try it out with the Micro:bit.</p>
<p class="msg msg--success">When running a single LED for learning about the components, these LEDs run Just Fine from the standard 3.3V output of the Micro:bit. I have soldered a bunch of single LEDs to 3 pin female headers and use them when teaching about colour theory and letting students practice the basics of setting them up and controlling them.</p>
<h3 id="mcetoc_1d0qkb1ui3"><img class="post__image--right" src="https://headtilt.me/media/posts/72/servo.jpg" alt="Servo motors" width="162" height="300">Servos</h3>
<p>I have a love/hate relationship with servos. On one hand, they fulfil a huge role in so¬†many interesting hobbyist electronics projects, and on the other hand I have had so many finnicky problems with them in terms of reliability when not controlled by addons like the <a href="https://www.kitronik.co.uk/5623-servolite-board-for-move-mini.html">Servo:Lite</a> board that presumably handle power regulation.</p>
<p>Servos come in two varieties: continuous and standard. Continuous servos simply keep rotating in whatever direction and at whatever speed you tell them to (and thus are useful for [rather noisy] motors to drive wheels).¬†Standard servos rotate to a specified angle and then stop, and are usually constrained to 180 degrees, although the cheaper varieties I use typically have a reliable range somewhere between 35 and 120 degrees.</p>
<p>Both are very simple to program by sending an analog signal corresponding to the angle (or speed for continuous rotation) to move to. A value of 0 is typically off, but I believe this works slightly differently with MicroPython compared to MakeCode.</p>
<p class="msg msg--success"><a href="https://www.kitronik.co.uk/5612-kitronik-i2c-servo-driver-board-for-the-bbc-microbit.html">Kitronik's 16 servo controller board</a> is a bit more complicated to program since it uses the I2C interface rather than a single pin per servo. There's a MicroPython library <a href="https://github.com/KitronikLtd/micropython-microbit-kitronik-16-servo-board">available on Github</a>.</p>
<p class="msg msg--success">The <a href="https://www.dfrobot.com/">DFRobot</a> <a href="https://www.dfrobot.com/product-1699.html">Micro:mate addon board</a> is a much cheaper alternative for running higher power devices like servos off the Micro:bit. I source mine from <a href="https://www.littlebird.com.au/">LittleBird Electronics</a> since the price is about the same as the import from DFRobot and they have better shipping times and take school purchase orders.</p>
<p>Some uses (mostly obvious):</p>
<ul>
<li>Driving wheels (continuous)</li>
<li>Gondola driver pulley (continuous)</li>
<li>Eye/mouth movement (standard) see Stu Lowe's <a href="https://twitter.com/stulowe80/status/1059636705681059840">excellent</a> <a href="https://twitter.com/stulowe80/status/1060090749629300737">animatronics</a> <a href="https://twitter.com/stulowe80/status/1064776967403134977?lang=en">stuff</a>¬†driven by <a href="https://drive.google.com/file/d/1zq8dIBuMc66W_lrNK7tc_Jhx1asPXkMe/view">3D printed linear actuators</a>¬†run¬†by continuous servos (and a bonus <a href="https://twitter.com/stulowe80/status/1070156463115366400">ping pong ball cannon</a>)</li>
<li>Steering (standard) see my <a href="https://github.com/zarify/microbit/tree/master/Steering_servo">laser cut steering assembly</a></li>
<li>Opening doors/windows (standard or continuous, depending if you wanted to rotate or drive a linear actuator to raise/lower something)</li>
</ul>
<h3 id="mcetoc_1d0qkc2i94"><img class="post__image--right" src="https://headtilt.me/media/posts/72/potentiometer.jpg" alt="Potentiometer" width="190" height="300">Potentiometer</h3>
<p>Potentiometers are a variable resistor where as you turn the knob there is more/less resistance applied. They are very simple to wire up, with voltage and ground hooked up to either side, and the central pin connected to a data pin.</p>
<p>Potentiometers are quite useful for a number of different applications:</p>
<ul>
<li>Control the angle (or speed for continuous rotation) of a servo.</li>
<li>Control the delay in between actions (e.g. blinking of an LED).</li>
<li>Change frequency or tempo of music.</li>
<li>Change red/green/blue component of LEDs.</li>
</ul>
<p class="msg msg--success">Be aware that there are different types of¬†tapers for potentiometers: linear and logarithmic. Linear taper potentiometers change their resistance at a constant rate as they are turned, whilst logarithmic taper potentiometers do not. Linear taper potentiometers have a B¬†before the resistance rating. e.g. B10K indicates a linear taper 10 kOhm potentiometer.<br><br><a href="https://en.wikipedia.org/wiki/Potentiometer#Resistance‚Äìposition_relationship:_&quot;taper&quot;">More info on Wikipedia</a>.</p>
<h3 id="mcetoc_1d0qkcnbp5"><img class="post__image--right" src="https://headtilt.me/media/posts/72/jack-861512_1280.jpg" alt="3.5mm jack" width="161" height="300">Speakers/Headphones</h3>
<p>One of the things I found surprising was MicroPython's speech library and how terrible-yet-quite-usable the quality was, considering how constrained the Micro:bit is. The tone generation in the music library is also quite usable in a few different ways (note, register, duration or by frequency).</p>
<p>Sound output on the other hand, is not very pleasant. You can hook up headphones and basic speakers very easily (data pin and ground), but volume control is not something you get as part of the package. Headphones tend to be uncomfortably loud, while speakers are prohibitably soft (for a class of 20 or so students). You can amplify using addons like Proto-Pic's amp:bit board, but that also¬†hides the rest of the Micro:bit's pins from use.</p>
<p class="msg msg--success">I have been experimenting with some cheap amplifying boards like the PAM8403 with some success. They require hooking up a 5V power supply to the amp however, so it's more wiring. Sound quality has varied with the samples I've used, but it has been reasonable for something that costs less than $1 and some come with a pre-soldered potentiometer for volume control.</p>
<h3 id="mcetoc_1d0ql0c0n9"><img class="post__image--right" src="https://headtilt.me/media/posts/72/Screen-Shot-2019-01-10-at-4.10.42-pm.png" alt="AM312 InfraRed Sensor" width="108" height="300">Mini InfraRed Sensors (Mini PIR - AS312/AM312)</h3>
<p>These PIR sensors are quite sensitive, in my testing triggering from about 3m away from the sensor for a human sized body. Unlike larger sensors there doesn't seem to be a way to change the amount of time the pin goes high for when it senses a heat source, with these triggering for about 2 seconds in my experience.</p>
<p>These devices are used in a digital context, where 0 would indicate no motion sensed, and 1 that the sensor had been triggered. The 1 continues to be read for however long the triggered period is, so¬†your code needs to cope with that (possibly waiting until the pin goes low to 0 again, depending on what else is happening in your execution loop).</p>
<p class="msg msg--highlight ">Some IR sensors work with 3.3V logic while most are 5V. The larger units will have attached potentiometers for sensitivity and duration which they send a high voltage for. I haven't seen any of the 3.3V sensors which are customisable.</p>
<h3 id="mcetoc_1d0rd8d51f"><img class="post__image--right" src="https://headtilt.me/media/posts/72/Screen-Shot-2019-01-10-at-4.19.19-pm.png" alt="IR Line Follower Module" width="108" height="300">Line Follower IR Sensors (TCRT5000 based)</h3>
<p>The line following sensor works in a similar way to the other IR sensor, but designed for reflected IR radiation at very short range. While it can be used for the intended purpose, I found this was also useful for detecting when items had been put into a container as well. One of my students created a donation box that thanked the donator when it detected something had passed the line sensor.</p>
<p>I'm sure there are other unintended short range sensing uses for it as well (which is good because I accidentally ordered 20 of them instead of 2 because they were so cheap and I didn't read the item description carefully enough).</p>
<h3 id="mcetoc_1d0ql73egb">Temperature Sensors</h3>
<p>Although the Micro:bit has a temperature sensor built in, it doesn't measure ambient temperature. Rather, it is the temperature of the device, and because it is integrated into the board, makes it less useful for measuring spot temperatures of any location that isn't at least the size of the Micro:bit itself.</p>
<p>When I started looking at using Micro:bits, I already had some Arduino components sitting around, so I thought I'd have a go at getting them working. The DHT11 (temperature and humidity sensor) is pretty common and I had a couple of them, but apparently the¬†Micro:bit can't drive it (and library which is present in the main MicroPython distribution isn't present in the Micro:bit flavour).</p>
<p>I have had a play with 10kOhm thermistors, which are basically the same as an LDR but for temperature (and wired the same way). They're fine for measuring changes in temperature, but¬†you would need to calibrate the analog readings against known temperatures to turn it into a traditional temperature measurement.</p>
<p>I finally ordered some TMP36 sensors, which work off 3.3V and¬†<strong>do</strong> give you an accurate temperature reading (after dividing by 10) without the need for your own calibration process. As a bonus, they're quite cheap (I paid around $3 for 5).</p>
<h2 id="mcetoc_1d0ql7vcdc">Custom Addons</h2>
<p>As well as looking at individual components, I've used a few different custom expansion boards, as well as some basic breakout boards to access the rest of the Micro:bit pins.</p>
<p class="msg msg--success">Although these will generally improve the usability for the components which they are designed for (the servo boards in particular), they often tie up more pins on the board than they need to, restricting integration with other components.<br><br>Because of the very easy networking available with the Micro:bit, it is possible to work around these limitations by using multiple devices, but it adds to the complexity to program for syncing and message passing in addition to sensing and control.</p>
<p><a href="https://www.kitronik.co.uk/5623-servolite-board-for-move-mini.html">Kitronik Servo:Lite<br></a></p>
<p>These boards have a strip of 5 NeoPixel LEDs, 2 sets of pins for servos, and a 3xAAA battery backpack. Apart from a slight design issue with clearance for the USB cable to the Micro:bit being very tight (it works with the cables that come with the Micro:bit but many other USB cables don't fit), they work brilliantly. The downside is the board screws onto all the terminals of the Micro:bit, so you can't attach any other devices.</p>
<p>They have been very reliable for servo control, and the lights are a nice bonus.</p>
<p><a href="https://www.kitronik.co.uk/5612-kitronik-i2c-servo-driver-board-for-the-bbc-microbit.html">Kitronik 16 Servo Controller</a></p>
<p>If all you want to do is control servos, and lots of them, then this is for you.¬†You can get a MicroPython moduly for controlling it from <a href="https://github.com/KitronikLtd/micropython-microbit-kitronik-16-servo-board">this GitHub repo</a>. It uses I2C, so my understanding of how it works is nonexistant, but it works fine (I used it for the servo control of my haunted house project).</p>
<p><a href="https://www.proto-pic.co.uk/ampbit-class-d-amplifier-for-microbit-with-headphone-jack.html">Proto-Pic¬†Amp:Bit</a></p>
<p>The Amp:bit is a nice way of hooking up speakers and headphones. It has contacts for soldering on pins or direct connections to a speaker, and as a 3.5mm jack for plugging in headphones, as well as a much needed volume control.</p>
<p>Again, this board cuts you off from using the rest of the pins on the Micro:bit as it uses a slot-in system like most expansion boards, and provides no other contacts. A better solution seems to be the <a href="https://www.monkmakes.com/mb_speaker/">Monk Makes Speaker</a>, which doesn't slot in the Micro:bit, allowing for more flexible projects.</p>
<p><a href="https://www.kitronik.co.uk/5620-motor-driver-board-for-the-bbc-microbit-v2.html">Kitronik Motor Driver Board</a></p>
<p>I have a couple of these but just haven't really used them much. Without a gearbox the small motors you generally get just don't have the torque to drive much. I have however looked at some alternative uses for motors, like 3D printing water pump and air pump housings which look promising.</p>
<p>Originally I thought these would only do full power to motors, but apparently they do support PWM for slowing the motors down, which would make them more useful.</p>
<p><a href="https://www.kitronik.co.uk/5625-zip-halo-for-the-bbc-microbit.html">ZIP Halo</a>¬†RGB LED ring</p>
<p>These are basically a 24 LED WS2812 strip arranged in a ring around the Micro:bit. The board screws onto the terminals of the Micro:bit, but does break out a general purpose pin for other uses, as well as an extension pin for attaching more LEDs onto the 'end' of the 24 provided. One of my student projects was one of these rings with a ring of 60 extended on the outside, to make a clock.</p>
<p><a href="https://www.dfrobot.com/product-1699.html">DFRobot Micro:mate</a></p>
<p>These addon boards screw onto the Micro:bit's 0 and GND terminals, and use spring-loaded feet to break out 6 pins (0, 1, 2 and 8, 12 and 16). They have an additional MicroUSB port which can be used for 5V power delivery to pins 8, 12 and 6 (which can be switched between 3.3V and 5V) and also feeds power back to the Micro:bit (although it can't be used for programming, which leads to lots of "why isn't my Micro:bit being deteced - oh I have it plugged into the wrong port").</p>
<p>They are quite cheap (around $10AUD) and I have found them to be quite reliable for hooking up servos, LED strips, and other higher power uses. Unlike the Servo:lite board, having 6 pins broken out means there is a lot of flexibility available.</p>
<h2 id="mcetoc_1d0qkdm3c8">Issues</h2>
<p>A lot of electronics kit, particularly designed for Arduino, runs off 5V, rather than 3.3V. Whilst you can externally power some of these, it's a bit less straightforward for others. Also, often the power requirements aren't always obvious, for example some common ultrasonic range finders come in 5V and 3.3V varieties (HC-SR04 vs HC-SR04P).</p>
<p>One of my early problems working with Micro:bits and breakout boards is figuring out which pins are capable of what. For example, unless the display has been disabled, some pins are dedicated to driving that (and you'll get an error about pins being in Display Mode, without much direction in what to do next - display.off() solves that problem). Some pins don't do analog operations, two pins are reserved to trigger button A and B events, etc. A diagram and a decent explanation that outlines some of this is on<a href="https://microbit.org/guide/hardware/pins/"> the pins page of the Micro:bit site</a>.</p>
<p>The biggest issue, which is not unique to the Micro:bit is the usual problem of figuring out whether something not working is the fault of bad code, faulty wiring, or faulty understanding of how the circuit is supposed to work.</p>
<h2 id="mcetoc_1d0ql64jba">Yet to dig into</h2>
<p>I still have only a really hazy understanding of I2C and SPI. I know what they do, but the¬†<strong>how</strong> is pretty vague. I still need to get my head around this.</p>
<p>The Micro:bits are great to work with in the classroom, but you pretty quickly hit a ceiling of what they can do with complex systems since there is only so much memory to go around. For example my Haunted House project's servo code ran into the wall on numerous occasions when I was developing it (and the error messages you get for that are¬†<strong>not</strong> helpful).</p>
<p>I've bought myself a couple of ESP32 boards to look at how practical they are to use (much cheaper than the Micro:bits, more resources, but not as much built in). The MicroPython environment is quite similar, you can get 802.11 and Bluetooth built in, threading and more. The downside is they don't act as a USB storage device like the Micro:bit does, so flashing programs and firmware involves fiddling with COM ports, potentially install drivers, etc. There is an IDE which helps with this from DFRobot (<a href="https://github.com/DFRobot/uPyCraft">https://github.com/DFRobot/uPyCraft</a>) but I haven't used it much yet.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Minecraft Edu Edition: Geological Surveys</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/minecraft-edu-edition-geological-surveys/"/>
        <id>https://headtilt.me/minecraft-edu-edition-geological-surveys/</id>

        <updated>2018-08-23T20:14:34+08:00</updated>
            <summary>
                <![CDATA[
                        <img src="https://headtilt.me/media/posts/70/geology_cover.PNG" alt="Minecraft Geological Survey" />
                    BackgroundI've been using Minecraft Education Edition with Code Connection in my Year&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                    <img src="https://headtilt.me/media/posts/70/geology_cover.PNG" alt="Minecraft Geological Survey" />
                <h2>Background</h2>
<p>I've been using <a href="https://education.minecraft.net/" target="_blank" rel="noopener noreferrer">Minecraft Education Edition with Code Connection</a> in my Year 7 classes this term to teach programming principles, which has been a blast* (i.e. I spend a lot of time trying to encourage students to write programs rather than run around building stuff themselves).</p>
<figure class="post__image post__image--right" ><img src="https://headtilt.me/media/posts/70/agent.PNG" alt="" width="191" height="241">
<figcaption >The Agent</figcaption>
</figure>
<p>Code Connection comes with a <a href="https://minecraft.makecode.com/courses/csintro" target="_blank" rel="noopener noreferrer">ton of interesting tutorials</a> to get started with, but I've been writing a few things for myself to try out different features, two of which are the Agent and the Builder. The Agent is a code-controlled character that can build from its inventory, attack and destroy surrounding blocks, and do basic sensing of its environment. The builder is an invisible constructor which is used for raising structures fairly quickly; it doesn't have an inventory and can't interact with its environment beyond placing blocks.</p>
<p>An example of the two interacting could be using the Builder to construct a house shape (e.g. walls and ceiling) and then using the Agent to dig out and place doors and windows.</p>
<h2>Geology</h2>
<p><iframe width="640" height="360" src="https://player.vimeo.com/video/286263292" frameborder="0" webkitallowfullscreen="webkitallowfullscreen" mozallowfullscreen="mozallowfullscreen" allowfullscreen="allowfullscreen" ></iframe></p>
<p>I wanted to try out something a bit different, and so I got to thinking about core samples. The Agent can dig, so why not use that ability for something interesting like looking at what it digs through (one of my lessons with my students was using¬†<strong>if</strong> statements to dig out diamonds from rock).</p>
<p>The Agent can pick up the blocks it digs through, so I decided to build a core sampler. It would dig down until it hit bedrock (the indestructable blocks at the bottom of the Minecraft world), and then I could use those blocks to analyse the composition of the earth it dug through.</p>
<p>One of the issues I ran into straight away is that the Agent and the Builder both have a maximum operating range away from the player, and so I often had to teleport the player to them in order to continue processing.</p>
<p>Otherwise this worked pretty well. Here are the commands I used for the program.</p>
<div class="gallery"   >
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/70/gallery/tp_snap.PNG" ><img src="https://headtilt.me/media/posts/70/gallery/tp_snap-thumbnail.PNG" alt="Teleport Initialisation" width="413" height="236"></a>
<figcaption class="gallery-description">Grabbing agent and storing coordinates.</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/70/gallery/core_snap.PNG" ><img src="https://headtilt.me/media/posts/70/gallery/core_snap-thumbnail.PNG" alt="Digging the core sample" width="240" height="240"></a>
<figcaption class="gallery-description">Digs until it hits bedrock, collecting blocks and recording IDs.</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/70/gallery/buildcore_snap.PNG" ><img src="https://headtilt.me/media/posts/70/gallery/buildcore_snap-thumbnail.PNG" alt="Building the core sample" width="240" height="240"></a>
<figcaption class="gallery-description">The core sample just recreates an array of block IDs.</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/70/gallery/graph_1_snap.PNG" ><img src="https://headtilt.me/media/posts/70/gallery/graph_1_snap-thumbnail.PNG" alt="Building the graph" width="240" height="240"></a>
<figcaption class="gallery-description">Use the Agent inventory to build the graph.</figcaption>
</figure>
<figure class="gallery__item"><a href="https://headtilt.me/media/posts/70/gallery/graph_2_snap.PNG" ><img src="https://headtilt.me/media/posts/70/gallery/graph_2_snap-thumbnail.PNG" alt="Last bit of building the graph" width="240" height="240"></a>
<figcaption class="gallery-description">Lots of special cases for blocks which don't drop themselves.</figcaption>
</figure>
</div>
<p>I thought about using the¬†<strong>lastBlock</strong> array of the blocks that had been encountered for building the frequency graph, but didn't really like the idea of implementing a sorting algorithm in MakeCode and in the end figured that since the Agent collects the same block together in its inventory anyway, that would make a nice shortcut.</p>
<p>The main issue with using the Agent inventory is many blocks do not drop themselves when broken and picked up. For example each of the ore types (coal, iron, gold, diamond, lapis lazuli, redstone, and emerald) drop non-buildable blocks, resulting in a long and rather ugly selection sequence translating the dropped material into the original block (and conveniently ignoring what happens if a single block drops more than one item!).</p>
<p>If you would like to try this out and don't want to spend forever dragging blocks around yourself, feel free to <a href="../../../../../media/files/minecraft-Geological Survey.mkcd">download my MakeCode file here</a> and load it into Code Connection yourself.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Migrating from Squarespace</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/migrating-from-squarespace/"/>
        <id>https://headtilt.me/migrating-from-squarespace/</id>

        <updated>2018-08-18T21:10:38+08:00</updated>
            <summary>
                <![CDATA[
                    I've been getting a bit antsy about continuing to pay Squarespace to&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>I've been getting a bit antsy about continuing to pay Squarespace to host Headtilt, mostly due to the infrequent updates that I seem to be doing over the last couple of years, and partly because I think I feel the need to tinker with stuff.</p>
<p>For ages I've liked the idea of static site generators, and occasionally I'll go and play with one for a while before falling out of love with the idea of writing up posts in Markdown, having to remember its syntax for links, images, etc, and then go running back to the arms of a regular CMS.</p>
<p>Recently I started checking out Publii. It generates static pages, but has a nice CMS style GUI editor that you can create posts in and manage the site before pushing it out to a hosting platform (in this instance Github Pages).</p>
<p>The downside is of course, migrating content out of Squarespace. Although they offer exporting to WordPress style XML, actually importing that content anywhere has been a less than ideal experience. Publii includes a tool to do this automatically, but nicely sorting those imported posts into tag categories is less fun, since you have to manually edit each post (lucky I'm a lazy writer!) and add relevant tags, and the automatic image downloading failed due some screwy file naming in the Squarespace export. This would be ok if images were stored in a central repository, but unfortunately, Publii stores posts in individual folders in the root directory, with images stored within those folders, meaning lots of manual fiddling with file locations, editing HTML in individual posts, etc.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Publii to Microblog</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/Publii-to-Microblog/"/>
        <id>https://headtilt.me/Publii-to-Microblog/</id>

        <updated>2018-08-18T16:32:29+08:00</updated>
            <summary>
                <![CDATA[
                    When deciding to play around with Publii (after taking a dislike to&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <p>When deciding to play around with Publii (after taking a dislike to Jekyll, and not finding anything else that tickled my fancy), the first problem seemed to be that despite supporting tags for posts, there was no way to create an RSS or JSON feed based on a tag. Publii creates a feed, but it contains all posts regardless of the category.</p>
<p>Two alternatives presented themselves, neither particularly nice:</p>
<ol>
<li>'hide' all posts except Microblog tagged posts from the feed. This is both kludgy, and not pleasant looking, since only Microblog posts would then appear on the front page of the site.</li>
<li>Write a script to create a new feed from the main one with everything except Microblog tagged posts filtered out. Not very hard, but requires running the feed filter after each post.<br>This wouldn't be a big deal if Publii followed most other static site generators in running with command-line scripts, since I could just add another script to the chain of posting, but since it all runs through a GUI program with a shiny "sync changes" button, it means then manually (or on a schedule to check for changes with a cron job maybe) pulling the JSON feed, filtering posts, and then pushing the new file to the site again.</li>
<li>(not a real option) figure out how to modify Publii to do what I wanted.</li>
</ol>
<p>Anyhow, I guess option 2 seems like the way to go since it's gross but simple to do. If it turns out I care (or post!) enough, I'll automate it later.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Year 7-8: Bad Crypto with Microbits</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/year-7-8-bad-crypto-with-microbits/"/>
        <id>https://headtilt.me/year-7-8-bad-crypto-with-microbits/</id>

        <updated>2019-01-10T16:28:05+08:00</updated>
            <summary>
                <![CDATA[
                    Security of Wireless NetworksMy previous lesson looking at wireless networks used Microbits&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h1 id="mcetoc_1d0rdvsr00">Security of Wireless Networks</h1>
<p>My <a href="#INTERNAL_LINK#/post/67">previous lesson</a> looking at wireless networks used Microbits and their Bluetooth networking to illustrate some of the problems with local wireless networks (as opposed to general internet connectivity, which we mostly did by doing speed tests and complaining about the school's net connection :).</p>
<p>At the end I wrote a bit about what I wanted to do with the next lesson, which was look at some basic crypto to handle the eavesdropping problem we had when someone else listened to the same channel we were communicating on.</p>
<p>(<strong>Note for anyone who wants to yell at me through the internet:</strong>¬†I'm well aware that this is not anything approaching real crypto, and I'll be the first to tell my kids that if they want to know more about how modern crypto really works, the first thing they need to do is go and find someone who really understands it - this is about what it does, not how it works.)</p>
<figure class="post__image post__image--right" ><img src="https://headtilt.me/media/posts/68/Almighty+XOR.png" alt=" The Almighty XOR ">
<figcaption >The Almighty XOR and his hammer MjollNOR</figcaption>
</figure>
<p>After running into a bit of a wall trying to get a <a target="_blank" href="https://en.wikipedia.org/wiki/XOR_cipher" rel="noopener noreferrer">XOR cipher</a> working in the block coding interface, I started to dig into the MicroPython interface instead. Along the way I discovered that there was a <a target="_blank" href="https://codewith.mu" rel="noopener noreferrer">rather nice basic IDE called Mu</a>, which lets you flash your code straight to the device, as well as running a REPL (Run-Evaluate-Print-Loop) to do easy code testing (which also works breaking into running code, so you can load functions onto the Microbit, then run and test them in the REPL interface).</p>
<h1 id="mcetoc_1d0rdvsr01">The Results</h1>
<p>I haven't used this with my classes yet, but I'll edit this post at the end of the week and add in how things went.</p>
<p>This version uses a shake of the Microbit to choose a random image,¬†mostly because getting A+B button presses working was annoying - see the Issues section later on, but also because I wanted to play with accelerometer gestures in Python. The A button transmits the image over whatever channel the device is listening to.</p>
<p>The B button switches channels, but I also made it switch between clear text and cipher text modes. You will see in the video when I press the B button for a second time on a channel the top-right LED lights up and the channel number stays the same. This indicates cipher text mode. It still listens on the same channel, but uses its cipher bitstring to decode any communication it receives (whether or not it's actually encrypted :).</p>
<p>Below is a short video showing how this version of the program works.</p>
<p><iframe width="540" height="360" src="https://player.vimeo.com/video/217366606?wmode=opaque&amp;api=1" frameborder="0" title="Dodgy Crypto with Networked Microbits" webkitallowfullscreen="webkitallowfullscreen" mozallowfullscreen="mozallowfullscreen" allowfullscreen="allowfullscreen"></iframe></p>
<p>Again, if you want to look at the Python code, or download the .hex file to load onto a Microbit via copying, you can grab them from <a target="_blank" href="https://github.com/zarify/microbit/tree/master/bad_crypto" rel="noopener noreferrer">the github repo</a>.</p>
<h1 id="mcetoc_1d0rdvsr02">Issues</h1>
<p>As usual, there were some issues I ran into along the way.</p>
<p>Event-driven programming in MicroPython just isn't there. With the block interface it <em>seems</em>¬†that event listeners get their own processes, so you can break into say a radio's receive section using a button's code. With Python the lack of event listeners is slightly mitigated with things like buttons keeping track of whether they have been pressed since you last examined them (<strong>button_a.is_pressed()</strong> vs <strong>button_a.was_pressed()</strong> for example). This is fine for a simple main loop, but you still need to be careful not to lock yourself out with delays, particularly since I found a few situations where I had to build in delays just to cope with the length of time it takes to un-depress a button.</p>
<p>Debugging is still annoying. Let's say there's a syntax error in your code, because you're just not paying attention. The Microbit will try and be helpful and, when it flashes and restarts, will tell you about any errors using the LED array. However,¬†trying to read an error message scrolling across the LED array is just plain painful, since it is quite bright, and also only shows you about a character and a half at a time. If you're lucky, opening a REPL will also give you the error message in a way that preserves your eyes and your sanity, but I didn't have this work all the time. I just tried to ignore the bright lights, and focus on the bit where it told you the line number of the error.</p>
<p>I quite like Mu. It's clean, simple, has (slightly overzealous) code completion, and it's nice getting to the REPL and being able to do code introspection. BUT Mu's 'check syntax' function checks syntax, but also highlights lines that don't obey its style guidelines. So this means if you're somewhat lazy about putting spaces after commas in argument lists or list definitions, you'll get exactly the same red indicator at the start of the line as a genuine syntax error (and it is <strong>very</strong>¬†opinionated about coding style, oh, and not being able to find an EOF at the end of the file).</p>
<p>Lastly, writing code which you can only interface with using two buttons and some basic gestures is hard. Talk about minimalism in UI design.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Year 7-8: Wireless Network Concepts with Microbits</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/year-7-8-wireless-network-concepts-with-microbits/"/>
        <id>https://headtilt.me/year-7-8-wireless-network-concepts-with-microbits/</id>

        <updated>2019-01-10T16:28:29+08:00</updated>
            <summary>
                <![CDATA[
                    OverviewPart of the new Digital Technologies curriculum for year 7 and 8&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h1 id="mcetoc_1d0re0qbd0">Overview</h1>
<p>Part of the new Digital Technologies curriculum for year 7 and 8 involves students learning about wired and wireless networks, and methods of data transmission and security. There are activities from the Digital Technologies Learning Hub that deal with <a target="_blank" href="https://www.digitaltechnologieshub.edu.au/teachers/lesson-ideas/computer-chatter-1" rel="noopener noreferrer">routing</a> and <a target="_blank" href="https://www.digitaltechnologieshub.edu.au/teachers/lesson-ideas/computer-chatter-2" rel="noopener noreferrer">issues with performance</a> (that are pretty good unplugged activities). I use these or variations on these when I teach those concepts, but I wanted to put together something that actually involved technology in the classroom, and dealt with ideas a bit lower down the network stack.</p>
<h1 id="mcetoc_1d0re0qbd1">Playing with Microbits</h1>
<p>This year we got some <a target="_blank" href="http://microbit.org" rel="noopener noreferrer">BBC Microbits</a>, and I've been looking at how to use them with my classes in an effective (and manageable) way. After playing around with some basic communication via Bluetooth with the Microbits, I thought I'd have a crack at writing some simple programs for students to use to encounter some of the problems with wireless networking, and use it as a hook for looking at ways that we've fixed those problems.</p>
<p>Microbits can broadcast messages via Bluetooth Low Energy, and allow you to choose the channel that they transmit/listen on per device. I wrote a (slightly tedious) program in the blocks interface (link here: <a target="_blank" href="https://pxt.microbit.org/06484-09741-52714-91595" rel="noopener noreferrer">feel free to use/abuse it</a>) that did the following:</p>
<ul>
<li>A button: choose a random picture to display on the screen</li>
<li>B button: broadcast the picture, pixel by pixel, to any listening Microbits</li>
<li>A+B buttons: switch to the next channel (cycle through 7 channels)</li>
</ul>
<p>The video below shows two of them in action.</p>
<p><iframe width="540" height="360" src="https://player.vimeo.com/video/217261990?wmode=opaque&amp;api=1" frameborder="0" title="Wireless Picture Transmission with Microbits" webkitallowfullscreen="webkitallowfullscreen" mozallowfullscreen="mozallowfullscreen" allowfullscreen="allowfullscreen"></iframe></p>
<h1 id="mcetoc_1d0re0qbd2">Lesson ideas</h1>
<p>If you dig through the code for the program, you'll see there are artificial pauses between the transmission of each 'pixel'/LED state. I ran into speed issues when transmitting them as fast as I could, where a number of pixels would not light up. This sort of worked out for the best, since it gave me an artificial latency figure I could manipulate, as well as giving students the idea that not just the lit up LED states were being transmitted, but also the state of the unlit ones.</p>
<p>I didn't want to send the state of the entire board at once, since two of the concepts I wanted students to discover were those of attenuation and interference from signal-absorbing materials (mostly from, in my words: "giant sacks of water", i.e. lots of students standing in between the transmitter and receiver). Since pixels were being transmitted one at a time, there was plenty of opportunity for images to be corrupted in transmission. I had kids hiding behind metal doors of cabinets, calling to each other across the courtyard asking what picture popped up on the receiver, and basically seeing what broke when. It was chaotic but pretty neat.</p>
<p>I have two other teachers who deliver at the same time as me, and I had prepped them with their own Microbits for that lesson. I didn't realise that one of them was in the next room however, which made the fact that all devices started transmitting on Channel 1 entertaining at the start of the lesson, but also a good jumping off point for why we need different channels, and rules for effective transmission in crowded networks.</p>
<h1 id="mcetoc_1d0re0qbd3">Where to next</h1>
<p>The block code is really quite limiting for this sort of program. It involved all sorts of horrible attempts at type casting, and was both fun to write (in the end!) and quite frustrating. At the same time it was good to see how complex a solution to my problem I could get without having to switch to Python.</p>
<h2 id="mcetoc_1d0re0qbd4">Some take-aways</h2>
<ul>
<li>I'm not sure if it's an feature of the block code or not, but you can't set the radios up to listen for different types of messages. For example you can't have integers, strings, and key/value pairs being broadcast and figure out what to do with them based on the type of message. This is why I ended up having the horrible reset method in there which checked the length of the value in the key/value pair.</li>
<li>The block code has a method for changing strings to integers, but doesn't seem to have a way to change integers to strings. This is relevant because I had a go at transmitting the entire state of the LED array as a bit string (see the bit at the end on next lesson) to avoid having to process each LED individually (which worked well for this lesson anyway, but isn't ideal).</li>
<li>The block interface handles if-else if-else if-...etc really nicely. Hit the config button in an if block, and then drag in as many else-if blocks as you need. Huge improvement on the way something like Scratch works.</li>
<li>The simulator is just rubbish for any moderately complicated radio transmission. I got an incredibly basic program to work in the simulator and was briefly impressed, but this one just refused to work at all, despite working fine on the real hardware.</li>
</ul>
<h2 id="mcetoc_1d0re0qbd5">Encryption</h2>
<p>We ended the lesson with the problems of clear text communication, with lots of students suggesting that we need a "different language" so that eavesdroppers don't know what we're saying to each other. I've had mixed success looking at encryption with this level of students before, so want to try something different this time around.</p>
<p>Usually there's lots of historical navel gazing at Caesar Ciphers, moving onto columnar ciphers and the like, and then we run out of time and move on. This time I want to look at one time pads (well, actually multi time pads, but I don't want to have to figure out how to transcribe a one time pad into each Microbit using two physical buttons each time - <em>sorry serious security people!</em>)¬†using XOR, and then try and find a good way of ending up at the idea of public/private keys, if not an actual implementation.</p>
<p>My plan is to implement the program I used for this class in Python, and then, with better control over the actual data, set up the devices with their own pads in pairs to use, so we can see how this affects others ability to eavesdrop on the transmitted pictures, despite still using the same channel.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Year 7: Data Representation &amp; Algorithms</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/year-7-data-representation-and-algorithms/"/>
        <id>https://headtilt.me/year-7-data-representation-and-algorithms/</id>

        <updated>2018-08-19T09:45:05+08:00</updated>
            <summary>
                <![CDATA[
                    Bunny, nay! ART!A couple of weeks back I saw a link on&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <figure class="post__image post__image--right" ><img src="https://headtilt.me/media/posts/66/bunny.png" alt=" Bunny, nay! ART! ">
<figcaption >Bunny, nay! ART!</figcaption>
</figure>
<p>A couple of weeks back I saw a link on Twitter to a <a target="_blank" href="http://www.laurabain.com.au/blog/data-transmission-using-the-collaboration-space-in-onenote-class-notebook-to-teach-children-about-how-computers-transmit-data-to-peripherals" rel="noopener noreferrer">post on Laura Bain's blog</a> about data transmission with year 4 and 5s. Go read the post, since it's nice and short, but it's basically kids sending binary data representing black or white pixels to each other using a OneNote Class Notebook. I was starting some of my students off on an activity that used a similar idea to (try to :) teach my kids about image data, and look at why algorithms are important while I was at it.</p>
<p>Late last year I was at a PD with other CEWA teachers to collectively produce resources for different areas of the new Digital Technologies curriculum that will come in in 2018. One of the lesson sequences I worked on was understanding the digital representation of image data with a side helping of algorithms.</p>
<h1>The Setup</h1>
<p>Since I don't like being too easy on my kids (these are 12 year olds after all!), they've got to figure some stuff out for themselves. I started out with getting them to describe the bunny picture to me. We'd discussed binary, pixels and colours the previous period, so some had an inkling of what was going on with the blocky bunny.</p>
<blockquote>
<p>What do you see? How would you describe it?</p>
</blockquote>
<blockquote>
<p>How would you describe it if I was on the phone or in another room?</p>
</blockquote>
<blockquote>
<p>How would you describe it if you could only write things down?</p>
</blockquote>
<blockquote>
<p>How would you describe it if I needed to draw the exact same picture?</p>
</blockquote>
<p>A couple of students suggested using coordinate systems, with lots of them sticking with answers like "it's a bunny", with not many even mentioning details like the colours of the eyes and nose.</p>
<h1>The Task</h1>
<p>¬†Since we were not going to get anywhere just talking about it, it was time to put students' belief in their own eloquence to the test:</p>
<ol>
<li>Partner up with someone</li>
<li>Without letting their partner see it,¬†use the rather nice <a target="_blank" href="http://www.piskelapp.com" rel="noopener noreferrer">Piskel</a> website to draw a simple (no more than 10x10, black and white only) pixel drawing</li>
<li>Save a copy or screengrab of the drawing for later reference</li>
<li>Write up a set of step-by-step instructions for their partner to recreate the drawing</li>
<li>Give the instructions to their partner, who, without seeing the picture, has to draw it</li>
<li>Compare the results with the original</li>
</ol>
<p>Because this is an activity where things are not meant to go according to plan, evaluation afterwards is really important. While they are writing their instructions, students were primed to think about what they found difficult to describe, and when following instructions, to think about what they found difficult to follow. When comparing source and copy images, they needed to look at what types of things went horribly, deliciously wrong.</p>
<h1>Results</h1>
<p>There was quite a variety in the accuracy and clarity of the instructions, even with some setup and some students explicitly talking about coordinates. I've included a small cross section below (spelling errors have for the most part been left in unless they made the instructions difficult to follow).<!-- [if gte mso 9]><xml><br />
 <o:OfficeDocumentSettings><br />
<o:AllowPNG/><br />
 </o:OfficeDocumentSettings><br />
</xml><![endif]--><!-- [if gte mso 9]><xml><br />
 <w:WordDocument><br />
<w:View>Normal</w:View><br />
<w:Zoom>0</w:Zoom><br />
<w:TrackMoves/><br />
<w:TrackFormatting/><br />
<w:PunctuationKerning/><br />
<w:ValidateAgainstSchemas/><br />
<w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid><br />
<w:IgnoreMixedContent>false</w:IgnoreMixedContent><br />
<w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText><br />
<w:DoNotPromoteQF/><br />
<w:LidThemeOther>EN-AU</w:LidThemeOther><br />
<w:LidThemeAsian>X-NONE</w:LidThemeAsian><br />
<w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript><br />
<w:Compatibility><br />
 <w:BreakWrappedTables/><br />
 <w:SnapToGridInCell/><br />
 <w:WrapTextWithPunct/><br />
 <w:UseAsianBreakRules/><br />
 <w:DontGrowAutofit/><br />
 <w:SplitPgBreakAndParaMark/><br />
 <w:EnableOpenTypeKerning/><br />
 <w:DontFlipMirrorIndents/><br />
 <w:OverrideTableStyleHps/><br />
</w:Compatibility><br />
<m:mathPr><br />
 <m:mathFont m:val="Cambria Math"/><br />
 <m:brkBin m:val="before"/><br />
 <m:brkBinSub m:val="&#45;-"/><br />
 <m:smallFrac m:val="off"/><br />
 <m:dispDef/><br />
 <m:lMargin m:val="0"/><br />
 <m:rMargin m:val="0"/><br />
 <m:defJc m:val="centerGroup"/><br />
 <m:wrapIndent m:val="1440"/><br />
 <m:intLim m:val="subSup"/><br />
 <m:naryLim m:val="undOvr"/><br />
</m:mathPr></w:WordDocument><br />
</xml><![endif]--><!-- [if gte mso 9]><xml><br />
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"<br />
DefSemiHidden="false" DefQFormat="false" DefPriority="99"<br />
LatentStyleCount="382"><br />
<w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/><br />
<w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 2"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 3"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 4"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 5"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 6"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 7"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 8"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 9"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 7"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 8"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 9"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 1"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 2"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 3"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 4"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 5"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 6"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 7"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 8"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 9"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Normal Indent"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="footnote text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="annotation text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="header"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="footer"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index heading"/><br />
<w:LsdException Locked="false" Priority="35" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="caption"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="table of figures"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="envelope address"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="envelope return"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="footnote reference"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="annotation reference"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="line number"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="page number"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="endnote reference"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="endnote text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="table of authorities"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="macro"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="toa heading"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number 5"/><br />
<w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Closing"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Signature"/><br />
<w:LsdException Locked="false" Priority="1" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="Default Paragraph Font"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text Indent"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Message Header"/><br />
<w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Salutation"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Date"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text First Indent"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text First Indent 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Heading"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text Indent 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text Indent 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Block Text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Hyperlink"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="FollowedHyperlink"/><br />
<w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/><br />
<w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Document Map"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Plain Text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="E-mail Signature"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Top of Form"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Bottom of Form"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Normal (Web)"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Acronym"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Address"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Cite"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Code"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Definition"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Keyboard"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Preformatted"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Sample"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Typewriter"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Variable"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Normal Table"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="annotation subject"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="No List"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Outline List 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Outline List 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Outline List 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Simple 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Simple 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Simple 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Classic 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Classic 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Classic 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Classic 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Colorful 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Colorful 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Colorful 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 7"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 8"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 7"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 8"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table 3D effects 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table 3D effects 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table 3D effects 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Contemporary"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Elegant"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Professional"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Subtle 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Subtle 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Web 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Web 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Web 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Balloon Text"/><br />
<w:LsdException Locked="false" Priority="39" Name="Table Grid"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Theme"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 7"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 8"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 9"/><br />
<w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/><br />
<w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" Name="Revision"/><br />
<w:LsdException Locked="false" Priority="34" QFormat="true"<br />
 Name="List Paragraph"/><br />
<w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/><br />
<w:LsdException Locked="false" Priority="30" QFormat="true"<br />
 Name="Intense Quote"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/><br />
<w:LsdException Locked="false" Priority="19" QFormat="true"<br />
 Name="Subtle Emphasis"/><br />
<w:LsdException Locked="false" Priority="21" QFormat="true"<br />
 Name="Intense Emphasis"/><br />
<w:LsdException Locked="false" Priority="31" QFormat="true"<br />
 Name="Subtle Reference"/><br />
<w:LsdException Locked="false" Priority="32" QFormat="true"<br />
 Name="Intense Reference"/><br />
<w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/><br />
<w:LsdException Locked="false" Priority="37" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="Bibliography"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/><br />
<w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/><br />
<w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/><br />
<w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/><br />
<w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/><br />
<w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/><br />
<w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/><br />
<w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/><br />
<w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/><br />
<w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 1"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 1"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 1"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 2"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 2"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 2"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 3"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 3"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 3"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 4"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 4"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 4"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 5"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 5"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 5"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 6"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 6"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 6"/><br />
<w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/><br />
<w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/><br />
<w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 1"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 1"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 1"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 2"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 2"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 2"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 3"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 3"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 3"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 4"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 4"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 4"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 5"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 5"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 5"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 6"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 6"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Mention"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Smart Hyperlink"/><br />
 </w:LatentStyles><br />
</xml><![endif]--><!-- [if gte mso 10]></p>
<style>
 /* Style Definitions */<br />
table.MsoNormalTable<br />
	{mso-style-name:"Table Normal";<br />
	mso-tstyle-rowband-size:0;<br />
	mso-tstyle-colband-size:0;<br />
	mso-style-noshow:yes;<br />
	mso-style-priority:99;<br />
	mso-style-parent:"";<br />
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;<br />
	mso-para-margin-top:0cm;<br />
	mso-para-margin-right:0cm;<br />
	mso-para-margin-bottom:8.0pt;<br />
	mso-para-margin-left:0cm;<br />
	line-height:107%;<br />
	mso-pagination:widow-orphan;<br />
	font-size:11.0pt;<br />
	font-family:Calibri;<br />
	mso-ascii-font-family:Calibri;<br />
	mso-ascii-theme-font:minor-latin;<br />
	mso-hansi-font-family:Calibri;<br />
	mso-hansi-theme-font:minor-latin;<br />
	mso-ansi-language:EN-AU;<br />
	mso-fareast-language:EN-US;}<br />
</style>
<p><![endif]--><!--StartFragment--></p>
<figure>
<blockquote>
<p>‚ÄúStep 1 get white and draw a circle<br>Step 2 fill in the circle<br>Step 3 put a big black square mid left<br>Step 4 put a big square top left<br>Step 5 put a big square in the middle and bottom left <br>Step 6 put a big square bottom right mid right and top right<br>Step 7 show me‚Äù</p>
</blockquote>
</figure>
<figure>
<blockquote>
<p>‚ÄúFirstly look at the bottom right hand corner.<br>Then put it the [coordinates] in <br>15, 12<br>...<br>16, 17 <br>To add colour. type in the colour #ff0000 at 15, 18<br>Then the full colour ... put in #a2a1a1 then click bucket to colour.‚Äù</p>
</blockquote>
</figure>
<figure>
<blockquote>
<p>‚ÄúYour goal is to follow the instructions as well as you can so you get the perfect image<br>Step 1: Go on the biggest drawing tool you can.<br>Step 2: Start on the top left, draw 5 perfect blocks going down.<br>Step 3: Go back on the third block you drew and draw three perfect blocks going to the right.<br>Step 4: On the last block you drew draw 2 blocks going up and two blocks going down.<br>Step 5: Put your mouse on the top block of the second line you drew, go 2 right then start drawing 5 blocks going down.<br>And you just drew HI your welcome.‚Äù</p>
</blockquote>
</figure>
<figure>
<blockquote>
<p>‚ÄúStep 1. Start with a line starting a (8,7) to (8,11)<br>Step 2. Start at (11,7) to (11,11)<br>Step 3. Then go to (6,14) to (13,14)‚Äù</p>
</blockquote>
</figure>
<figure>
<blockquote>
<p>‚Äúfollow these instructions.<br>I will wright the direction to move your mouse and then I will say a colour to place in.<br>Start with a black pixel <br>right nothing, right black, right nothing, right white, right white, right white, down nothing, left white, left nothing, left nothing, left black, left black, left black, down black, right nothing, right black, right nothing, right white, right white, right white. Your pixel drawing should be complete.‚Äù</p>
</blockquote>
</figure>
<p><!-- [if gte mso 9]><xml><br />
 <o:OfficeDocumentSettings><br />
<o:AllowPNG/><br />
 </o:OfficeDocumentSettings><br />
</xml><![endif]--><!-- [if gte mso 9]><xml><br />
 <w:WordDocument><br />
<w:View>Normal</w:View><br />
<w:Zoom>0</w:Zoom><br />
<w:TrackMoves/><br />
<w:TrackFormatting/><br />
<w:PunctuationKerning/><br />
<w:ValidateAgainstSchemas/><br />
<w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid><br />
<w:IgnoreMixedContent>false</w:IgnoreMixedContent><br />
<w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText><br />
<w:DoNotPromoteQF/><br />
<w:LidThemeOther>EN-AU</w:LidThemeOther><br />
<w:LidThemeAsian>X-NONE</w:LidThemeAsian><br />
<w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript><br />
<w:Compatibility><br />
 <w:BreakWrappedTables/><br />
 <w:SnapToGridInCell/><br />
 <w:WrapTextWithPunct/><br />
 <w:UseAsianBreakRules/><br />
 <w:DontGrowAutofit/><br />
 <w:SplitPgBreakAndParaMark/><br />
 <w:EnableOpenTypeKerning/><br />
 <w:DontFlipMirrorIndents/><br />
 <w:OverrideTableStyleHps/><br />
</w:Compatibility><br />
<m:mathPr><br />
 <m:mathFont m:val="Cambria Math"/><br />
 <m:brkBin m:val="before"/><br />
 <m:brkBinSub m:val="&#45;-"/><br />
 <m:smallFrac m:val="off"/><br />
 <m:dispDef/><br />
 <m:lMargin m:val="0"/><br />
 <m:rMargin m:val="0"/><br />
 <m:defJc m:val="centerGroup"/><br />
 <m:wrapIndent m:val="1440"/><br />
 <m:intLim m:val="subSup"/><br />
 <m:naryLim m:val="undOvr"/><br />
</m:mathPr></w:WordDocument><br />
</xml><![endif]--><!-- [if gte mso 9]><xml><br />
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"<br />
DefSemiHidden="false" DefQFormat="false" DefPriority="99"<br />
LatentStyleCount="382"><br />
<w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/><br />
<w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 2"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 3"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 4"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 5"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 6"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 7"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 8"/><br />
<w:LsdException Locked="false" Priority="9" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="heading 9"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 7"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 8"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index 9"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 1"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 2"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 3"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 4"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 5"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 6"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 7"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 8"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="toc 9"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Normal Indent"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="footnote text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="annotation text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="header"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="footer"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="index heading"/><br />
<w:LsdException Locked="false" Priority="35" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="caption"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="table of figures"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="envelope address"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="envelope return"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="footnote reference"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="annotation reference"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="line number"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="page number"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="endnote reference"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="endnote text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="table of authorities"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="macro"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="toa heading"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Bullet 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Number 5"/><br />
<w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Closing"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Signature"/><br />
<w:LsdException Locked="false" Priority="1" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="Default Paragraph Font"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text Indent"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="List Continue 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Message Header"/><br />
<w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Salutation"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Date"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text First Indent"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text First Indent 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Heading"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text Indent 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Body Text Indent 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Block Text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Hyperlink"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="FollowedHyperlink"/><br />
<w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/><br />
<w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Document Map"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Plain Text"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="E-mail Signature"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Top of Form"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Bottom of Form"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Normal (Web)"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Acronym"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Address"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Cite"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Code"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Definition"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Keyboard"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Preformatted"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Sample"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Typewriter"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="HTML Variable"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Normal Table"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="annotation subject"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="No List"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Outline List 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Outline List 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Outline List 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Simple 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Simple 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Simple 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Classic 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Classic 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Classic 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Classic 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Colorful 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Colorful 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Colorful 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Columns 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 7"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Grid 8"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 7"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table List 8"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table 3D effects 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table 3D effects 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table 3D effects 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Contemporary"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Elegant"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Professional"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Subtle 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Subtle 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Web 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Web 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Web 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Balloon Text"/><br />
<w:LsdException Locked="false" Priority="39" Name="Table Grid"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Table Theme"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 2"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 3"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 4"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 5"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 7"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 8"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Note Level 9"/><br />
<w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/><br />
<w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/><br />
<w:LsdException Locked="false" SemiHidden="true" Name="Revision"/><br />
<w:LsdException Locked="false" Priority="34" QFormat="true"<br />
 Name="List Paragraph"/><br />
<w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/><br />
<w:LsdException Locked="false" Priority="30" QFormat="true"<br />
 Name="Intense Quote"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/><br />
<w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/><br />
<w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/><br />
<w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/><br />
<w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/><br />
<w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/><br />
<w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/><br />
<w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/><br />
<w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/><br />
<w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/><br />
<w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/><br />
<w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/><br />
<w:LsdException Locked="false" Priority="19" QFormat="true"<br />
 Name="Subtle Emphasis"/><br />
<w:LsdException Locked="false" Priority="21" QFormat="true"<br />
 Name="Intense Emphasis"/><br />
<w:LsdException Locked="false" Priority="31" QFormat="true"<br />
 Name="Subtle Reference"/><br />
<w:LsdException Locked="false" Priority="32" QFormat="true"<br />
 Name="Intense Reference"/><br />
<w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/><br />
<w:LsdException Locked="false" Priority="37" SemiHidden="true"<br />
 UnhideWhenUsed="true" Name="Bibliography"/><br />
<w:LsdException Locked="false" Priority="39" SemiHidden="true"<br />
 UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/><br />
<w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/><br />
<w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/><br />
<w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/><br />
<w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/><br />
<w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/><br />
<w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/><br />
<w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/><br />
<w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/><br />
<w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 1"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 1"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 1"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 2"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 2"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 2"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 3"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 3"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 3"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 4"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 4"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 4"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 5"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 5"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 5"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="Grid Table 1 Light Accent 6"/><br />
<w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/><br />
<w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/><br />
<w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="Grid Table 6 Colorful Accent 6"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="Grid Table 7 Colorful Accent 6"/><br />
<w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/><br />
<w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/><br />
<w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 1"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 1"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 1"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 2"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 2"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 2"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 3"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 3"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 3"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 4"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 4"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 4"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 5"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 5"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 5"/><br />
<w:LsdException Locked="false" Priority="46"<br />
 Name="List Table 1 Light Accent 6"/><br />
<w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/><br />
<w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/><br />
<w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/><br />
<w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/><br />
<w:LsdException Locked="false" Priority="51"<br />
 Name="List Table 6 Colorful Accent 6"/><br />
<w:LsdException Locked="false" Priority="52"<br />
 Name="List Table 7 Colorful Accent 6"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Mention"/><br />
<w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"<br />
 Name="Smart Hyperlink"/><br />
 </w:LatentStyles><br />
</xml><![endif]--><!-- [if gte mso 10]></p>
<style>
 /* Style Definitions */<br />
table.MsoNormalTable<br />
	{mso-style-name:"Table Normal";<br />
	mso-tstyle-rowband-size:0;<br />
	mso-tstyle-colband-size:0;<br />
	mso-style-noshow:yes;<br />
	mso-style-priority:99;<br />
	mso-style-parent:"";<br />
	mso-padding-alt:0cm 5.4pt 0cm 5.4pt;<br />
	mso-para-margin-top:0cm;<br />
	mso-para-margin-right:0cm;<br />
	mso-para-margin-bottom:8.0pt;<br />
	mso-para-margin-left:0cm;<br />
	line-height:107%;<br />
	mso-pagination:widow-orphan;<br />
	font-size:11.0pt;<br />
	font-family:Calibri;<br />
	mso-ascii-font-family:Calibri;<br />
	mso-ascii-theme-font:minor-latin;<br />
	mso-hansi-font-family:Calibri;<br />
	mso-hansi-theme-font:minor-latin;<br />
	mso-ansi-language:EN-AU;<br />
	mso-fareast-language:EN-US;}<br />
</style>
<p><![endif]-->There were quite a few sets of instructions that were completely subjective, but a good number of them were pretty accurate and had chosen strategies that, even if they didn't specifically mention pixels did a good job at representing colour, position, and scale. Notice that a couple of students included colour into their instructions, although only one of them made sure that the colour they drew was going to be the same one as the source image by including RGB codes.</p>
<p>My next lesson with these two classes will be students trying to recreate images, establish what algorithms are important, and then work on an algorithm with the class to follow when writing and reading image data for simple images. Depending on time/progress we'll look at colour, particularly since Piskel maintains a numbered swatch panel, which might initially look like an attractive way of recording colours (√†¬†la indexed colours).</p>
<h1>Thoughts</h1>
<p>My two classes of year 7s really got into this, and handled the discussion part of the task quite well. It was a more difficult task making sure that the pictures they drew in Piskel weren't too complicated (I had houses, cats, a Nintendo DS, all multicoloured, before I reminded them they had to write instructions on how to draw them!). The adversarial side of the task was also a big incentive and the kids responded well to that part.</p>
<p>The difficulties mostly lay in the technical details:</p>
<ul style="margin-left: 40px;">
<li>Students had only just received their laptops for the first time, and there was a bit of New and Shiny Syndrome going on</li>
<li>I didn't think through the swapping of instructions that well to begin with, and so there was some physical swapping of devices with new tabs open going on for those who finished instructions early, which wasn't ideal</li>
</ul>
<p>Since OneNote Class Notebooks have been made a bit easier to use with (some) SEQTA integration, with my next batch of students next term I will have a go at using the collaborative space to share instructions and the resulting images, although OneNote has been quite flaky when dealing with a number of students and images at once.</p>
<p>As far as the core ideas I wanted to get to went, I think the activity was pretty successful, particularly when we got past the talking stage and into individual problem solving. Next year when I have more time with my year 7s (this year I only see them once a week for a term), I'll work it into a more fully featured task.</p>
            ]]>
        </content>
    </entry>
    <entry>
        <title>Playing with Affinity Designer Brushes</title>
        <author>
            <name>Rob</name>
        </author>
        <link href="https://headtilt.me/playing-with-affinity-designer-brushes/"/>
        <id>https://headtilt.me/playing-with-affinity-designer-brushes/</id>

        <updated>2018-08-18T21:13:53+08:00</updated>
            <summary>
                <![CDATA[
                    The BackstoryBefore Christmas I was noodling around with Affinity Designer in an&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h1>The Backstory</h1>
<p>Before Christmas I was noodling around with Affinity Designer in an attempt to be a bit better at design. Part of this has been getting more familiar with the tools by working through a bunch of the <a target="_blank" href="https://design.tutsplus.com" rel="noopener noreferrer">tutorials at Tuts+</a>. Tuts+ hosts some tutorials aimed at <a target="_blank" href="https://design.tutsplus.com/categories/affinity-designer" rel="noopener noreferrer">Designer</a>, but working through the ones aimed at other software like Illustrator has been an interesting exercise in figuring out Designer's tools.</p>
<p>While I was making a robot face, I was trying to make wires by putting a gradient on a stroke, but it seems Designer won't allow you to have a gradient which follows parallel to the stroke. Instead it will apply the gradient to the stroke colour in the same manner as filling.</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/64/wire1.png" alt=" What I wanted ">
<figcaption >What I wanted</figcaption>
</figure>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/64/wire2.png" alt=" What I got ">
<figcaption >What I got</figcaption>
</figure>
<p>I went digging around the Affinity forums, and apparently this is A Thing, there were some other requests for it, but no real solutions. I got sidetracked by tutorials on making smoke brushes before thinking that I could maybe just make my own wire brush. Turns out, this is pretty easy, and lead to some other interesting stuff.</p>
<p>There are some other things that don't seem work the way I'd like them to (scatter brushes), but let's look at what worked for the time being.</p>
<h1>Actually Doing Stuff</h1>
<p>You can make "Textured Intensity" and "Textured Image" brushes in Designer quite easily - basically just make the image, export it as a PNG, and then create a new brush from it. The wire brush uses the Textured Image style brush, and allows you to either use the original colours in the source image, or colourised according to the selected stroke colour.</p>
<p>(Note that I don't actually understand the difference between "textured intensity" and "textured image", and couldn't find any info about them, but the intensity brush option didn't do what I wanted.)</p>
<h2>Wire Gradient</h2>
<p>To start with, I just wanted the gradient so that I could draw wires. This is pretty straightforward: Just draw a rectangle containing the gradient you want, and export is as a PNG, and then re-import it as an image brush.</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/64/template1.png" alt=" Rectangle filled with a gradient. Easy. ">
<figcaption >Rectangle filled with a gradient. Easy.</figcaption>
</figure>
<p>This let me make nice looking wires in a range of colours and weights:</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/64/different_strokes.png" alt=" Wires of different stroke weights and colours based on the new Textured Image Brush. ">
<figcaption >Wires of different stroke weights and colours based on the new Textured Image Brush.</figcaption>
</figure>
<h2>Bundles of Wires</h2>
<p>While browsing through the Tuts+ articles I saw one which was just a big bunch of resources, one of which was a plugin for Illustrator for making fairy lights, so naturally I wondered if I could do that with a brush in Designer.</p>
<p>The first step was to get a nicely tiling bundle of wires. I looked at the sample in the article, and they didn't do anything fancy like overlapping wires, just a pair of curves, which looked pretty easy.</p>
<p>I used my wire brush to stroke a pair of Christmassy pen curves, which was the easy bit. Getting them to tile wasn't especially difficult, just a case of duplicating both wires, and shifting each half left and right by half the canvas width (in my case 400px for an 800px canvas). I then joined the curves of the same colour in the middle using the Node tool and the Join Curves function (after selecting the two end points I wanted to join), deleting one of the two nodes, and cleaning up the curve.</p>
<p><img class="post__image--center" src="https://headtilt.me/media/posts/64/join1.png"></p>
<p><img class="post__image--center" src="https://headtilt.me/media/posts/64/join2.png"></p>
<p><img class="post__image--center" src="https://headtilt.me/media/posts/64/join3.png" width="661" height="282"></p>
<p><img class="post__image--center" src="https://headtilt.me/media/posts/64/join4.png" width="661" height="257"></p>
<p>The last step is creating a slice using the Export Persona so that only the parts of the wire within the canvas bounds are exported (I was working with lots of extra vertical space, so just exporting the selected objects would be no good).</p>
<p><img class="post__image--center" src="https://headtilt.me/media/posts/64/brush_group.png" width="661" height="113"></p>
<p>Import the selected PNG as a brush to see if it worked, which it did after choosing 'repeat' instead of the 'stretch' option in the brush's settings.</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/64/brush_edit.png" alt=" Editing the Brush Settings " width="661" height="614">
<figcaption >Editing the Brush Settings</figcaption>
</figure>
<p>¬†</p>
<p>One thing to be aware of is if you want to use colours from the original image instead of colourising based on the stroke colour, you need to choose 'None' from the stroke colour, which I found to be a bit counter-intuitive.</p>
<h2>The Lights</h2>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/64/pretty_lights.png" alt=" My not very exciting fairy light ">
<figcaption >My not very exciting fairy light</figcaption>
</figure>
<p>The last step was adding the lights (also the bit I'm least happy with, but it still looks ok with some judicious editing of curves afterwards). I attached something that looked vaguely like a fairy light onto my bundle of wires in the original brush file, added in a halo and some radiant lines, and exported a new image file.</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/64/light_success.png" alt=" Fairy Light Success ">
<figcaption >Fairy Light Success</figcaption>
</figure>
<p>All in all it worked pretty well. On tight curves the rays get twisted up, so the curves need a bit of fiddlng. It works best on gentle curves.</p>
<figure class="post__image post__image--center" ><img src="https://headtilt.me/media/posts/64/light_fail.png" alt=" Fairy Light Fail! ">
<figcaption >Fairy Light Fail!</figcaption>
</figure>
            ]]>
        </content>
    </entry>
</feed>
